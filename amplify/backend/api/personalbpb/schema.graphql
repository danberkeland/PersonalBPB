type Customer @model @auth(rules: [{allow: public}]) {
  id: ID!
  nickName: String!
  custName: String!
  zoneName: String
  addr1: String
  addr2: String
  city: String
  zip: String
  email: String
  firstName: String
  lastName: String
  phone: String
  toBePrinted: String
  toBeEmailed: String
  terms: String
  invoicing: String
  prodsNotAllowed: [String]
  latestFirstDeliv: Int
  latestFinalDeliv: Int
  webpageURL: String
  picURL: String
  gMap: String
  specialInstructions: String
}

type Product @model @auth(rules: [{allow: public}]) {
  id: ID!
  prodName: String!
  nickName: String!
  packGroup: String
  packSize: Int
  doughType: String
  freezerThaw: Boolean
  packGroupOrder: Int
  readyTime: Int
  bakedWhere: [String]
  wholePrice: Int
  retailPrice: Int
  isWhole: Boolean
  depends: [String]
  weight: Int
  descrip: String
  picURL: String
  squareID: String
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  qty: Int
  prodName: String!
  custName: String
  PONote: String
  route: String
  SO: Int
  isWhole: Boolean
  delivDate: String
  timeStamp: String
}

type Standing @model @auth(rules: [{allow: public}]) {
  id: ID!
  dayNum: Int
  qty: Int
  timeStamp: String
  prodName: String
  custName: String
  SO: Int
}

type Holding @model @auth(rules: [{allow: public}]) {
  id: ID!
  dayNum: Int
  qty: Int
  timeStamp: String
  prodName: String
  custName: String
  SO: Int
}

type Route @model @auth(rules: [{allow: public}]) {
  id: ID!
  routeName: String
  routeStart: Float
  routeTime: Float
  RouteDepart: String
  RouteArrive: String
  RouteServe: [String]
  RouteSched: [String]
}

type Zone @model @auth(rules: [{allow: public}]) {
  id: ID!
  zoneNum: Int
  zoneName: String
  zoneFee: Int
}

type AltPricing @model @auth(rules: [{allow: public}]) {
  id: ID!
  custName: String
  prodName: String
  price: Int
}

type Closure @model @auth(rules: [{allow: public}]) {
  id: ID!
  custName: String
  firstDate: String
  lastDate: String
}


 