[{"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reportWebVitals.js":"1","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\App.js":"2","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\index.js":"3","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CustomerContext.js":"4","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\dateTimeHelpers.js":"5","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\OrdersContext.js":"6","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ProductsContext.js":"7","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\StandingContext.js":"8","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\sortDataHelpers.js":"9","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\useFetch.js":"10","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CurrentDataContext.js":"11","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\handleInteractions.js":"12","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\HoldingContext.js":"13","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\AppRoutes.js":"14","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Ordering.js":"15","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Logistics.js":"16","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ToggleContext.js":"17","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\CartBuildingHelpers.js":"18","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\RoutesContext.js":"19","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\b_calendarApp.js":"20","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\f_orderEntryButtons.js":"21","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\a_OrderingFunctions.js":"22","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo.js":"23","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo\\Customers.js":"24","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo\\DeliveryDate.js":"25","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo\\PONotes.js":"26","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo\\Routes.js":"27","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\c_orderCommandLine.js":"28","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_currentOrderList.js":"29","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList.js":"30","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList\\RecentOrderListButtons.js":"31","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList\\RecentOrderList.js":"32","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\AddCartEntryItem.js":"33","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\AddStandingOrderEntry.js":"34","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\CartEntryItem.js":"35","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\BuildCurrentCartList.js":"36","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\StandingOrderEntry.js":"37"},{"size":362,"mtime":1609089131749,"results":"38","hashOfConfig":"39"},{"size":1502,"mtime":1612978384029,"results":"40","hashOfConfig":"39"},{"size":500,"mtime":1609089131749,"results":"41","hashOfConfig":"39"},{"size":1200,"mtime":1612972329564,"results":"42","hashOfConfig":"39"},{"size":2614,"mtime":1612792390167,"results":"43","hashOfConfig":"39"},{"size":1295,"mtime":1612972396003,"results":"44","hashOfConfig":"39"},{"size":1180,"mtime":1612533457287,"results":"45","hashOfConfig":"39"},{"size":1211,"mtime":1612875412932,"results":"46","hashOfConfig":"39"},{"size":5189,"mtime":1612979055576,"results":"47","hashOfConfig":"39"},{"size":629,"mtime":1612533457294,"results":"48","hashOfConfig":"39"},{"size":915,"mtime":1612980174257,"results":"49","hashOfConfig":"39"},{"size":794,"mtime":1612385307377,"results":"50","hashOfConfig":"39"},{"size":1190,"mtime":1612875376159,"results":"51","hashOfConfig":"39"},{"size":415,"mtime":1612908319684,"results":"52","hashOfConfig":"39"},{"size":1062,"mtime":1612982938868,"results":"53","hashOfConfig":"39"},{"size":761,"mtime":1612983332790,"results":"54","hashOfConfig":"39"},{"size":1104,"mtime":1612975923242,"results":"55","hashOfConfig":"39"},{"size":3515,"mtime":1612973590564,"results":"56","hashOfConfig":"39"},{"size":430,"mtime":1612978454437,"results":"57","hashOfConfig":"39"},{"size":4386,"mtime":1612982392638,"results":"58","hashOfConfig":"39"},{"size":8006,"mtime":1612982372106,"results":"59","hashOfConfig":"39"},{"size":2450,"mtime":1612982400095,"results":"60","hashOfConfig":"39"},{"size":1111,"mtime":1612983280984,"results":"61","hashOfConfig":"39"},{"size":1698,"mtime":1612983184932,"results":"62","hashOfConfig":"39"},{"size":556,"mtime":1612983194367,"results":"63","hashOfConfig":"39"},{"size":902,"mtime":1612983208687,"results":"64","hashOfConfig":"39"},{"size":1039,"mtime":1612983159194,"results":"65","hashOfConfig":"39"},{"size":7422,"mtime":1612983271196,"results":"66","hashOfConfig":"39"},{"size":1070,"mtime":1612984261846,"results":"67","hashOfConfig":"39"},{"size":494,"mtime":1612982365981,"results":"68","hashOfConfig":"39"},{"size":2182,"mtime":1612983237460,"results":"69","hashOfConfig":"39"},{"size":5048,"mtime":1612983227315,"results":"70","hashOfConfig":"39"},{"size":2396,"mtime":1612983582391,"results":"71","hashOfConfig":"39"},{"size":3660,"mtime":1612983757496,"results":"72","hashOfConfig":"39"},{"size":441,"mtime":1612983980749,"results":"73","hashOfConfig":"39"},{"size":2465,"mtime":1612984012709,"results":"74","hashOfConfig":"39"},{"size":7604,"mtime":1612984290757,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1dwemmr",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reportWebVitals.js",[],["157","158"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\App.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\index.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CustomerContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\dateTimeHelpers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\OrdersContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ProductsContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\StandingContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\sortDataHelpers.js",["159"],"\r\nimport { convertDatetoBPBDate, convertDatetoStandingDate } from './dateTimeHelpers'\r\nimport { buildCartList, buildStandList, compileOrderList, filterOutZeros } from './CartBuildingHelpers'\r\n\r\n\r\n\r\nexport const sortAtoZDataByIndex = (data,index) => {\r\n    data.sort(function(a,b){return a[index]>b[index] ? 1 : -1;})\r\n}\r\n\r\n\r\nexport const convertSheetsOrdersToAppOrders = (data) => {\r\n    let convertedOrderList = data.map(order => [ order[2],\r\n                                            order[7],\r\n                                            order[8],\r\n                                            order[4],\r\n                                            order[6],\r\n                                            order[2], \r\n                                            order[3] !== \"9999\" ? true : false,\r\n                                            order[0],\r\n                                            \r\n    ])\r\n    return convertedOrderList\r\n}\r\nexport const addAnEmptyRowToTop = (data) => {\r\n    let len = data.length;\r\n    let newArray = [];\r\n    for (let i=0; i<len; i++){\r\n        newArray.push('')\r\n        }\r\n    data.unshift(newArray);\r\n    return data\r\n}\r\n\r\nexport const createRetailOrderCustomers = orders => {\r\n    let special = orders.filter(order => order[6] === false)\r\n    special = special.map(order => [\"\",\"\",order[2],\"\"])\r\n    let unique = special.map(ar => JSON.stringify(ar))\r\n        .filter((itm, idx, arr) => arr.indexOf(itm) === idx)\r\n        .map(str => JSON.parse(str))\r\n    if (unique[0] !== ['','','','']){\r\n        unique.unshift(['','','',''])\r\n    }\r\n    return unique\r\n}\r\n\r\n\r\nexport const createRouteList = customers => {\r\n    let routesArray = [...customers]\r\n    routesArray = routesArray.map(cust => cust[3])\r\n    const uniqueRoutesSet = new Set(routesArray)\r\n    const newRoutesArray = Array.from(uniqueRoutesSet)\r\n    return newRoutesArray\r\n}\r\n\r\nexport const findNewRoute = (chosen, delivDate, standing, orders, customers) => {\r\n    let newRoute\r\n    let cartList = buildCartList(chosen,delivDate,orders)\r\n    let standList = buildStandList(chosen, delivDate, standing)\r\n    let currentOrderList = compileOrderList(cartList,standList)\r\n    let currentRoutes = currentOrderList.filter(order => order[2] === chosen && order[7] === convertDatetoBPBDate(delivDate) );\r\n    let custRoute = customers.find(element => element[2] === chosen)\r\n    custRoute ? newRoute = custRoute[3] : newRoute = \"Pick up Carlton\"\r\n    if (currentRoutes.length>0) {\r\n        newRoute = currentRoutes[0][4]\r\n    }\r\n    return newRoute\r\n}\r\n\r\n\r\nexport const findCurrentPonote =(chosen, delivDate, orders) => {\r\n    let po\r\n    let currentOrders = orders.filter(order => order[2] === chosen && order[7] === convertDatetoBPBDate(delivDate) );\r\n    if (currentOrders.length>0) {\r\n        po = currentOrders[0][3]\r\n    } else {\r\n        po = \"na\"\r\n    }\r\n    return po\r\n}\r\n\r\n\r\nexport const createCartList = (chosen, delivDate, orders) => {\r\n    let BPBDate = convertDatetoBPBDate(delivDate)\r\n    let filteredOrders = [...orders]\r\n    let cartList = filteredOrders ? filteredOrders.filter(order => order[7] === BPBDate && order[2] === chosen) : [];\r\n    return cartList\r\n}\r\n\r\n\r\nexport const createStandingList = (chosen, delivDate, standing) => {\r\n    let standingDate = convertDatetoStandingDate(delivDate);  \r\n    let filteredStanding = [...standing] \r\n    let standingList = filteredStanding ? filteredStanding.filter(standing => standing[0] === standingDate && standing[8] === chosen) : [];\r\n    let convertedOrderList = standingList.map(order => [ order[2],\r\n        order[7],\r\n        order[8],\r\n        'na',\r\n        order[6],\r\n        order[2], \r\n        order[3] !== \"9999\" ? true : false,\r\n        standingDate\r\n])\r\n    return convertedOrderList\r\n\r\n}\r\n\r\n\r\nexport const createCurrentOrderList = (cartList, standingList) => {\r\n\r\n    let orderList = cartList.concat(standingList)\r\n    for (let i=0; i<orderList.length; ++i ){\r\n        for (let j=i+1; j<orderList.length; ++j){\r\n            if (orderList[i][1] === orderList[j][1]){\r\n                orderList.splice(j,1);\r\n            }\r\n        }\r\n    }\r\n\r\n    return orderList\r\n}\r\n\r\nexport const findAvailableProducts = (products, orders, chosen, delivDate) => {\r\n    let availableProducts = [...products]\r\n    for (let prod of orders) {\r\n        let prodPull = prod[0]===\"0\" && prod[2] === chosen && \r\n        prod[7] === convertDatetoBPBDate(delivDate) ? prod[1] : ''\r\n        availableProducts = availableProducts.filter(availProd => availProd[1] !== prodPull)\r\n    }\r\n    availableProducts.unshift(['','','','','','','','','','','','','','','','','','','']);\r\n    return availableProducts\r\n}\r\n\r\nexport const decideWhetherToAddOrModify = (orders, newOrder, delivDate) => {\r\n    let newOrderList = [...orders]\r\n    let chosen = newOrder[2]\r\n    let prodToAdd = newOrder[1]\r\n    let qty = newOrder[0]\r\n    let prodIndex = orders.findIndex(order => \r\n        order[1] === prodToAdd && \r\n        order[2] === chosen && \r\n        order[7] === convertDatetoBPBDate(delivDate))\r\n    if(prodIndex >= 0){\r\n        newOrderList[prodIndex][0] = qty\r\n    } else {\r\n\r\n        newOrderList.push(newOrder)\r\n    }\r\n    return newOrderList\r\n}","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\useFetch.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CurrentDataContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\handleInteractions.js",[],["160","161"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\HoldingContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\AppRoutes.js",["162"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\n\r\nimport Ordering from './Ordering'\r\nimport Logistics from './Logistics'\r\n\r\n\r\n\r\nfunction AppRoutes() {\r\n\r\n  return (\r\n    <Router>\r\n      <Route path=\"/ordering\" component={Ordering} /> \r\n      <Route path=\"/logistics\" component={Logistics} />  \r\n    </Router>        \r\n  );\r\n}\r\n\r\nexport default AppRoutes;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Ordering.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Logistics.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ToggleContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\CartBuildingHelpers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\RoutesContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\b_calendarApp.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\f_orderEntryButtons.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\a_OrderingFunctions.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo\\Customers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo\\DeliveryDate.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo\\PONotes.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo\\Routes.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\c_orderCommandLine.js",["163","164","165"],"import React, { useContext } from 'react';\r\n\r\nimport { CurrentDataContext } from '../../dataContexts/CurrentDataContext';\r\nimport { OrdersContext } from '../../dataContexts/OrdersContext';\r\nimport { CustomerContext } from '../../dataContexts/CustomerContext';\r\nimport { StandingContext } from '../../dataContexts/StandingContext';\r\nimport { ProductsContext } from '../../dataContexts/ProductsContext';\r\nimport { ToggleContext } from '../../dataContexts/ToggleContext';\r\n\r\nimport { todayPlus, daysOfTheWeek, convertDatetoBPBDate, convertDatetoStandingDate } from '../../helpers/dateTimeHelpers'\r\n\r\nimport swal from '@sweetalert/with-react';\r\n\r\n\r\nconst clonedeep = require('lodash.clonedeep')\r\n\r\n\r\nconst OrderCommandLine = () => {\r\n\r\n  const { chosen, setChosen, delivDate, setDelivDate, route, ponote } = useContext(CurrentDataContext)\r\n  const { orders, setOrders } = useContext(OrdersContext)\r\n  const { customers } = useContext(CustomerContext)\r\n  const { standing } = useContext(StandingContext)\r\n  const { products } = useContext(ProductsContext)\r\n  const { orderTypeWhole, setOrderTypeWhole, setRouteIsOn } = useContext(ToggleContext)\r\n  \r\n  let [ today, tomorrow, twoDay ] = todayPlus()\r\n\r\n  const checkForCustomer = (entry, customers) => {\r\n\r\n    let nextCustomer = chosen\r\n\r\n    if (entry.includes(\"retail \")){\r\n      setOrderTypeWhole(false)\r\n      let newRetailCustName = entry.replace(\"retail \",\"\")\r\n      let newRetailCustList = [...orders]\r\n      let newRetailCustEntry = [\"\",\"\",newRetailCustName,\"\",\"\",\"\",false,\"\"]\r\n      newRetailCustList.push(newRetailCustEntry)\r\n      setOrders(newRetailCustList)\r\n      setDelivDate(tomorrow)\r\n      setChosen(newRetailCustName);\r\n      return\r\n    } \r\n\r\n    for (let cust of customers) {\r\n      if (entry.includes(cust[2]) || entry.includes(cust[0])) {\r\n        nextCustomer = cust[2];\r\n        if (nextCustomer !== ''){\r\n          setChosen(nextCustomer)\r\n          setRouteIsOn(true)\r\n          setDelivDate(tomorrow)\r\n          setOrderTypeWhole(true)\r\n          return\r\n        }\r\n      };\r\n    };\r\n\r\n\r\n    if (nextCustomer === '' && chosen === ''){\r\n      swal ({\r\n        text: \"Please choose a customer\",\r\n        icon: \"error\",\r\n        buttons: false,\r\n        timer: 2000\r\n      })\r\n      return\r\n    }\r\n\r\n    \r\n    return false\r\n  };\r\n  \r\n  \r\n\r\n  const checkForDelivDate = (entry) => {\r\n    let [ today, tomorrow, twoDay ] = todayPlus()\r\n    let [ Sun, Mon, Tues, Wed, Thurs, Fri, Sat ] = daysOfTheWeek()\r\n    let dateWords = [ ['today',today],['tomorrow',tomorrow],['twoday',twoDay],\r\n                      ['sun',Sun],['mon',Mon],['tue',Tues],['tues',Tues],['wed',Wed],['thu',Thurs],\r\n                      ['thur',Thurs],['thurs',Thurs],['fri',Fri],['sat',Sat]]\r\n    for (let wordSet of dateWords){\r\n      if(entry.includes(wordSet[0])){\r\n        setDelivDate(wordSet[1])\r\n      }\r\n      \r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  const checkForProducts = (entry) => {\r\n    \r\n    \r\n    let isThereAProduct = /\\d+\\s\\w+/g.test(entry)\r\n    if (isThereAProduct){\r\n      let newOrder\r\n      const array = [...entry.matchAll(/\\d+\\s\\w+/g)];\r\n      let enteredProducts = array.map(item => item[0].split(\" \"))\r\n      let ordersToUpdate = [];\r\n      for (let prod of products){\r\n        for (let item of enteredProducts){\r\n          if (prod[2] === item[1]){\r\n            newOrder = [item[0],prod[1], chosen, ponote, route, \"0\", orderTypeWhole, convertDatetoBPBDate(delivDate)] // [ qty, prod, cust, po, route, so, ty ]\r\n            ordersToUpdate.push(newOrder)\r\n          }\r\n  \r\n        }\r\n      }\r\n    \r\n      console.log(ordersToUpdate)\r\n\r\n      // create map of orders for cust, delivdate #1\r\n\r\n      // Build Orders List based on delivDate and Chosen\r\n      let BPBDate = convertDatetoBPBDate(delivDate)\r\n      let filteredOrders = clonedeep(orders)\r\n      let cartList = filteredOrders ? filteredOrders.filter(order => order[7] === BPBDate && order[2] === chosen) : [];\r\n      \r\n      // Build Standing LIst based on delivDate and Chosen\r\n      let standingDate = convertDatetoStandingDate(delivDate);  \r\n      let filteredStanding = clonedeep(standing)\r\n      let standingList = filteredStanding ? filteredStanding.filter(standing => standing[0] === standingDate && standing[8] === chosen) : [];\r\n      let convertedOrderList = standingList.map(order => [    order[2],\r\n                                                              order[7],\r\n                                                              order[8],\r\n                                                              'na',\r\n                                                              order[6],\r\n                                                              order[2], \r\n                                                              order[3] !== \"9999\" ? true : false,\r\n                                                              convertDatetoBPBDate(delivDate)])\r\n      \r\n      // Compare Order List to Stand List and give Order List precedence in final list                                                        \r\n      let custOrderList = cartList.concat(convertedOrderList)\r\n      for (let i=0; i<custOrderList.length; ++i ){\r\n          for (let j=i+1; j<custOrderList.length; ++j){\r\n              if (custOrderList[i][1] === custOrderList[j][1]){\r\n                  custOrderList.splice(j,1);\r\n              }\r\n          }\r\n      }\r\n\r\n      console.log(custOrderList)\r\n      // new product by new product, check if it exists\r\n      let ordersToModify = [...orders]\r\n      if (custOrderList.length>0){\r\n        for (let ord of ordersToUpdate){\r\n          for (let custOrd of custOrderList){\r\n            if (ord[1] === custOrd[1]){\r\n            \r\n              let index = ordersToModify.findIndex(order => order[1] === custOrd[1] &&\r\n                    order[2] === chosen && order[7] === convertDatetoBPBDate(delivDate));\r\n              if (index>=0){\r\n                ordersToModify[index][0] = ord[0] \r\n                     \r\n              } else{\r\n                ord[5] = custOrd[5]\r\n                ordersToModify.push(ord)\r\n                \r\n              }\r\n            }\r\n          }    \r\n        }\r\n      }\r\n      for (let ord of ordersToUpdate){\r\n        for (let mod in ordersToModify){\r\n          let index = ordersToModify.findIndex(order => order[1] === ord[1] &&\r\n            order[2] === chosen && order[7] === convertDatetoBPBDate(delivDate));\r\n          if (index<0){\r\n            ordersToModify.push(ord)\r\n          }\r\n        }\r\n      }\r\n      // for order in ordersToModify\r\n      //      if index not in orders - push order into ordersToModify\r\n      setOrders(ordersToModify)\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  const interpretEntry = async (entry) => {\r\n    checkForCustomer(entry, customers)\r\n\r\n    checkForDelivDate(entry)\r\n    checkForProducts(entry)\r\n  };\r\n\r\n  \r\n\r\n  const handleInput = (entry) => {\r\n     if (entry.key === \"Enter\") {\r\n        interpretEntry(entry.target.value)\r\n        document.getElementById(\"orderCommand\").value = ''; \r\n        \r\n    }\r\n    return\r\n  };\r\n\r\n  \r\n\r\n  \r\n  \r\n  return (        \r\n    <div className = \"orderCommandLine\">\r\n      <input  type=\"text\" \r\n              id=\"orderCommand\" \r\n              className=\"orderCommand\"\r\n              name=\"orderCommand\" \r\n              placeholder=\"Enter Customers, Orders, Dates ...\"\r\n              onKeyUp={e => handleInput(e)}>\r\n\r\n      </input>\r\n    </div>     \r\n  );\r\n}\r\n\r\nexport default OrderCommandLine;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_currentOrderList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList\\RecentOrderListButtons.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList\\RecentOrderList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\AddCartEntryItem.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\AddStandingOrderEntry.js",["166"],"import React, { useState, useContext, useEffect } from 'react';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { CurrentDataContext } from '../../../../dataContexts/CurrentDataContext';\r\nimport { OrdersContext } from '../../../../dataContexts/OrdersContext';\r\nimport { StandingContext } from '../../../../dataContexts/StandingContext';\r\nimport { HoldingContext } from '../../../../dataContexts/HoldingContext';\r\nimport { ProductsContext } from '../../../../dataContexts/ProductsContext'\r\nimport { ToggleContext } from '../../../../dataContexts/ToggleContext';\r\n\r\nimport { findAvailableProducts,decideWhetherToAddOrModify } from '../../../../helpers/sortDataHelpers';\r\n\r\n\r\nconst clonedeep = require('lodash.clonedeep')\r\n\r\n\r\nconst AddCartEntryItem = () => {\r\n\r\n    const { products } = useContext(ProductsContext)\r\n    const { standing, setStanding } = useContext(StandingContext)\r\n    const { holding, setHolding } = useContext(HoldingContext)\r\n    const { orders } = useContext(OrdersContext)\r\n    const { chosen, delivDate } = useContext(CurrentDataContext)\r\n    const { standList } = useContext(ToggleContext)\r\n\r\n    const [ pickedProduct, setPickedProduct ] = useState();\r\n    const [ productList, setProductList ] = useState();\r\n    \r\n    let standHold \r\n    standList ? standHold = \"MAKE H.O.\" : standHold = \"MAKE S.O.\"\r\n\r\n    useEffect(() => {\r\n        let availableProducts = findAvailableProducts(products, orders, chosen, delivDate)\r\n        setProductList(availableProducts)\r\n        },[products, orders, chosen, delivDate ]);\r\n\r\n\r\n    const handleChange = e => {\r\n        setPickedProduct(e.target.value)\r\n\r\n    } \r\n\r\n    const handleAdd = () => {\r\n        let newStandingList = clonedeep(standing)\r\n        for (let i=1; i<8; i++){\r\n            let newOrder =[i.toString(),\"na\",\"0\",\"na\",\"na\",\"na\",\"na\",pickedProduct,chosen] \r\n            newStandingList.push(newOrder)\r\n        }\r\n        \r\n        setStanding(newStandingList)\r\n        setPickedProduct('');\r\n    }\r\n\r\n    const handleStandHold = async () => {\r\n        let currentStandList = await clonedeep(standing)\r\n        let currentHoldList = await clonedeep(holding)\r\n\r\n        if(standList){\r\n            let currentStandListClip = await currentStandList.filter(stand => stand[8] === chosen)\r\n            let reducedStandList = await currentStandList.filter(stand => stand[8] !== chosen)\r\n            let send = currentHoldList.concat(currentStandListClip)\r\n            setStanding(await reducedStandList)\r\n            setHolding(send)\r\n        } else {\r\n            let currentHoldListClip = currentHoldList.filter(hold => hold[8] === chosen)\r\n            let reducedHoldList = currentHoldList.filter(hold => hold[8] !== chosen)\r\n            let send = currentStandList.concat(currentHoldListClip)\r\n            setHolding(reducedHoldList)\r\n            setStanding(send)\r\n            \r\n        }\r\n    }\r\n\r\n    const ho = {\r\n        backgroundColor: \"red\"\r\n      }\r\n\r\n      const so = {\r\n        backgroundColor: \"green\"\r\n      }\r\n\r\n\r\n    return (\r\n        <div className=\"addAProductToStanding\">\r\n            <select id = \"products\" name=\"products\" value={pickedProduct} onChange={handleChange} disabled={chosen ? false : true}>\r\n            {\r\n                productList ? productList.map((product) => \r\n                    <option key = {uuidv4()} value={product[1]}>{product[1]}</option>\r\n                ) : ''\r\n                }; \r\n            </select>\r\n           \r\n            <button onClick={handleAdd}>ADD</button>\r\n            <button style={standList ? so : ho } onClick={handleStandHold}>{standHold}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddCartEntryItem","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\CartEntryItem.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\BuildCurrentCartList.js",["167","168"],"import React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport swal from '@sweetalert/with-react';\r\n\r\nimport { CurrentDataContext } from '../../../../dataContexts/CurrentDataContext';\r\nimport { OrdersContext } from '../../../../dataContexts/OrdersContext';\r\nimport { StandingContext } from '../../../../dataContexts/StandingContext';\r\n\r\nimport { buildCartList, buildStandList, compileOrderList, filterOutZeros } from '../../../../helpers/CartBuildingHelpers'\r\n\r\n\r\nconst BuildCurrentCartList = () => {\r\n\r\n    const { orders } = useContext(OrdersContext)\r\n    const { standing } = useContext(StandingContext)\r\n    const { chosen, delivDate, currentCartList, setCurrentCartList } = useContext(CurrentDataContext)\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let cartList = buildCartList(chosen,delivDate,orders)\r\n        let standList = buildStandList(chosen, delivDate, standing)\r\n        let currentOrderList = compileOrderList(cartList,standList)\r\n        let noZerosOrderList = filterOutZeros(currentOrderList)\r\n        setCurrentCartList(noZerosOrderList)\r\n\r\n    }, [chosen, delivDate, orders, setCurrentCartList, standing])\r\n\r\n\r\n    const handleRemove = e => {}\r\n\r\n    const handleQtyModify = e => {}\r\n\r\n    return (\r\n        <React.Fragment>\r\n        {currentCartList.map(order => \r\n            <React.Fragment key={order[1]+\"b\"}>\r\n                <button \r\n                    className=\"trashButton\"\r\n                    onClick={e => {handleRemove(e)}} \r\n                    key={order[1]+\"e\"} \r\n                    name={order[1]}\r\n                    id={order[1]}>🗑️</button>\r\n                <label key={order[1]}>{order[1]}</label>   \r\n                <input  \r\n                    type=\"text\" \r\n                    size=\"4\"\r\n                    maxLength=\"5\"\r\n                    key={order[1]+\"c\"} \r\n                    id={order[1]+\"item\"} \r\n                    name={order[1]} \r\n                    placeholder={order[0]} \r\n                    onKeyUp={e => {handleQtyModify(e)}}\r\n                    onBlur={(e) => {\r\n\r\n                        e.target.value = ''\r\n\r\n                    }}\r\n                        >\r\n                </input>\r\n                <label \r\n                    key={order[1]+\"d\"} \r\n                    className=\"previous\">{order[5] === order[0] ? '' : order[5]}\r\n                </label>\r\n\r\n            </React.Fragment>\r\n        )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default BuildCurrentCartList","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\StandingOrderEntry.js",["169","170"],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":3,"column":59,"nodeType":"177","messageId":"178","endLine":3,"endColumn":73},{"ruleId":"171","replacedBy":"179"},{"ruleId":"173","replacedBy":"180"},{"ruleId":"175","severity":1,"message":"181","line":3,"column":35,"nodeType":"177","messageId":"178","endLine":3,"endColumn":41},{"ruleId":"175","severity":1,"message":"182","line":27,"column":9,"nodeType":"177","messageId":"178","endLine":27,"endColumn":14},{"ruleId":"175","severity":1,"message":"183","line":27,"column":26,"nodeType":"177","messageId":"178","endLine":27,"endColumn":32},{"ruleId":"175","severity":1,"message":"184","line":165,"column":18,"nodeType":"177","messageId":"178","endLine":165,"endColumn":21},{"ruleId":"175","severity":1,"message":"185","line":12,"column":32,"nodeType":"177","messageId":"178","endLine":12,"endColumn":58},{"ruleId":"175","severity":1,"message":"186","line":1,"column":40,"nodeType":"177","messageId":"178","endLine":1,"endColumn":48},{"ruleId":"175","severity":1,"message":"187","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":12},{"ruleId":"188","severity":1,"message":"189","line":81,"column":7,"nodeType":"190","endLine":81,"endColumn":34,"suggestions":"191"},{"ruleId":"175","severity":1,"message":"192","line":86,"column":13,"nodeType":"177","messageId":"178","endLine":86,"endColumn":19},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'filterOutZeros' is defined but never used.","Identifier","unusedVar",["193"],["194"],"'Switch' is defined but never used.","'today' is assigned a value but never used.","'twoDay' is assigned a value but never used.","'mod' is assigned a value but never used.","'decideWhetherToAddOrModify' is defined but never used.","'useState' is defined but never used.","'swal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setStandList'. Either include it or remove the dependency array.","ArrayExpression",["195"],"'newQty' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},"Update the dependencies array to be: [chosen, holding, setStandList, standing]",{"range":"198","text":"199"},[2989,3016],"[chosen, holding, setStandList, standing]"]