[{"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reportWebVitals.js":"1","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\App.js":"2","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\index.js":"3","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CustomerContext.js":"4","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\dateTimeHelpers.js":"5","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\OrdersContext.js":"6","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ProductsContext.js":"7","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\StandingContext.js":"8","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\sortDataHelpers.js":"9","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\useFetch.js":"10","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CurrentDataContext.js":"11","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\HoldingContext.js":"12","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\AppRoutes.js":"13","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Logistics.js":"14","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ToggleContext.js":"15","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\CartBuildingHelpers.js":"16","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\RoutesContext.js":"17","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\AddCartEntryItem.js":"18","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\AddStandingOrderEntry.js":"19","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\CartEntryItem.js":"20","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\BuildCurrentCartList.js":"21","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\StandingOrderEntry.js":"22","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\BuildCurrentStandingList.js":"23","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\StandBuildingHelpers.js":"24","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\calendarBuildHelper.js":"25","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Nav.js":"26","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\BPBS.js":"27","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\BPBN.js":"28","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Croix.js":"29","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Billing.js":"30","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Admin.js":"31","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Loader.js":"32","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\LogisticsTabs.js":"33","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByCustomer.js":"34","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByProduct.js":"35","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\LogisticsFunctions.js":"36","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\DeliveryRouteGrid.js":"37","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\DeliveryCustomerGrid.js":"38","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByRoute.js":"39","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\DeliveryProductGrid.js":"40","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Ordering.js":"41","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\OrderCommandLine.js":"42","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\CurrentOrderList.js":"43","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\CurrentOrderInfo.js":"44","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\OrderEntryButtons.js":"45","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\calendar.js":"46","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\Calendar.js":"47","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Customers.js":"48","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Products.js":"49","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\aws-exports.js":"50","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\graphql\\queries.js":"51","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\graphql\\mutations.js":"52","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\CustomerList.js":"53","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\Name.js":"54","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\Location.js":"55","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\Contact.js":"56","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\Billing.js":"57","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\Buttons.js":"58","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\formHelpers.js":"59","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editRoutes\\editRoutes.js":"60","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editRoutes\\RouteList.js":"61","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editRoutes\\Info.js":"62","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editRoutes\\Buttons.js":"63","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editZones\\editZones.js":"64","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editZones\\ZoneList.js":"65","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editZones\\Buttons.js":"66","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editZones\\Info.js":"67","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Description.js":"68","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\ProductList.js":"69","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Baking.js":"70","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Billing.js":"71","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Packing.js":"72","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Buttons.js":"73","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Name.js":"74","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByRoute\\ByRoute.js":"75","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByRoute\\Parts\\RouteGrid.js":"76","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByRoute\\Parts\\RouteList.js":"77","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByRoute\\Parts\\ToolBar.js":"78","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\delivGridHelpers.js":"79"},{"size":362,"mtime":1609089131749,"results":"80","hashOfConfig":"81"},{"size":1920,"mtime":1614734016687,"results":"82","hashOfConfig":"81"},{"size":500,"mtime":1609089131749,"results":"83","hashOfConfig":"81"},{"size":1552,"mtime":1615234090706,"results":"84","hashOfConfig":"81"},{"size":2562,"mtime":1615903935224,"results":"85","hashOfConfig":"81"},{"size":2082,"mtime":1615813943751,"results":"86","hashOfConfig":"81"},{"size":1437,"mtime":1615383938668,"results":"87","hashOfConfig":"81"},{"size":1821,"mtime":1615751621965,"results":"88","hashOfConfig":"81"},{"size":5575,"mtime":1616159004282,"results":"89","hashOfConfig":"81"},{"size":1963,"mtime":1615553936489,"results":"90","hashOfConfig":"81"},{"size":1147,"mtime":1615769660331,"results":"91","hashOfConfig":"81"},{"size":1785,"mtime":1615751644484,"results":"92","hashOfConfig":"81"},{"size":1944,"mtime":1615921551944,"results":"93","hashOfConfig":"81"},{"size":1692,"mtime":1613912501900,"results":"94","hashOfConfig":"95"},{"size":1290,"mtime":1613420662672,"results":"96","hashOfConfig":"81"},{"size":5006,"mtime":1616072933941,"results":"97","hashOfConfig":"81"},{"size":430,"mtime":1613420662670,"results":"98","hashOfConfig":"81"},{"size":3035,"mtime":1615903495527,"results":"99","hashOfConfig":"81"},{"size":3205,"mtime":1616159609022,"results":"100","hashOfConfig":"81"},{"size":255,"mtime":1615903509294,"results":"101","hashOfConfig":"81"},{"size":3907,"mtime":1615903481041,"results":"102","hashOfConfig":"81"},{"size":385,"mtime":1615903603650,"results":"103","hashOfConfig":"81"},{"size":8547,"mtime":1615903588925,"results":"104","hashOfConfig":"81"},{"size":5034,"mtime":1615680842855,"results":"105","hashOfConfig":"81"},{"size":1941,"mtime":1615553782688,"results":"106","hashOfConfig":"81"},{"size":3141,"mtime":1615413131142,"results":"107","hashOfConfig":"81"},{"size":190,"mtime":1613420662655,"results":"108","hashOfConfig":"81"},{"size":190,"mtime":1613420662654,"results":"109","hashOfConfig":"81"},{"size":193,"mtime":1613420662657,"results":"110","hashOfConfig":"81"},{"size":197,"mtime":1613420662656,"results":"111","hashOfConfig":"81"},{"size":191,"mtime":1613420662650,"results":"112","hashOfConfig":"81"},{"size":1873,"mtime":1614706269300,"results":"113","hashOfConfig":"81"},{"size":0,"mtime":1613769374633,"results":"114","hashOfConfig":"95"},{"size":3570,"mtime":1613941048675,"results":"115","hashOfConfig":"81"},{"size":3691,"mtime":1613940913819,"results":"116","hashOfConfig":"81"},{"size":2439,"mtime":1613936701168,"results":"117","hashOfConfig":"81"},{"size":1511,"mtime":1614642664563,"results":"118","hashOfConfig":"81"},{"size":2937,"mtime":1614642664560,"results":"119","hashOfConfig":"81"},{"size":4187,"mtime":1614642664559,"results":"120","hashOfConfig":"81"},{"size":1460,"mtime":1614642664562,"results":"121","hashOfConfig":"81"},{"size":2839,"mtime":1615903326526,"results":"122","hashOfConfig":"81"},{"size":6607,"mtime":1615903393186,"results":"123","hashOfConfig":"81"},{"size":1071,"mtime":1615903378930,"results":"124","hashOfConfig":"81"},{"size":6392,"mtime":1616159600261,"results":"125","hashOfConfig":"81"},{"size":6637,"mtime":1616159595089,"results":"126","hashOfConfig":"81"},{"size":1334,"mtime":1614213824864,"results":"127","hashOfConfig":"95"},{"size":2492,"mtime":1616159605095,"results":"128","hashOfConfig":"81"},{"size":3526,"mtime":1615553539269,"results":"129","hashOfConfig":"81"},{"size":3768,"mtime":1615557169324,"results":"130","hashOfConfig":"81"},{"size":734,"mtime":1615833303228,"results":"131","hashOfConfig":"81"},{"size":6949,"mtime":1615833299641,"results":"132","hashOfConfig":"81"},{"size":10861,"mtime":1615833299905,"results":"133","hashOfConfig":"81"},{"size":1517,"mtime":1615553494489,"results":"134","hashOfConfig":"81"},{"size":1490,"mtime":1615553525148,"results":"135","hashOfConfig":"81"},{"size":4563,"mtime":1615582400731,"results":"136","hashOfConfig":"81"},{"size":2575,"mtime":1615553481891,"results":"137","hashOfConfig":"81"},{"size":2657,"mtime":1615553431625,"results":"138","hashOfConfig":"81"},{"size":6226,"mtime":1615904108829,"results":"139","hashOfConfig":"81"},{"size":1788,"mtime":1616159625208,"results":"140","hashOfConfig":"81"},{"size":2706,"mtime":1615903181106,"results":"141","hashOfConfig":"81"},{"size":2185,"mtime":1615903223171,"results":"142","hashOfConfig":"81"},{"size":8714,"mtime":1615903198181,"results":"143","hashOfConfig":"81"},{"size":3933,"mtime":1615903165052,"results":"144","hashOfConfig":"81"},{"size":2679,"mtime":1615903258284,"results":"145","hashOfConfig":"81"},{"size":2155,"mtime":1615903290204,"results":"146","hashOfConfig":"81"},{"size":3530,"mtime":1615903238512,"results":"147","hashOfConfig":"81"},{"size":1888,"mtime":1615903277736,"results":"148","hashOfConfig":"81"},{"size":1899,"mtime":1615571050337,"results":"149","hashOfConfig":"81"},{"size":1514,"mtime":1615818212264,"results":"150","hashOfConfig":"81"},{"size":4027,"mtime":1615577933420,"results":"151","hashOfConfig":"81"},{"size":2186,"mtime":1615578317981,"results":"152","hashOfConfig":"81"},{"size":2492,"mtime":1615664308665,"results":"153","hashOfConfig":"81"},{"size":5809,"mtime":1615818205241,"results":"154","hashOfConfig":"81"},{"size":1488,"mtime":1615570828178,"results":"155","hashOfConfig":"81"},{"size":2166,"mtime":1616072877067,"results":"156","hashOfConfig":"81"},{"size":3404,"mtime":1616160694918,"results":"157","hashOfConfig":"81"},{"size":2091,"mtime":1616159618937,"results":"158","hashOfConfig":"81"},{"size":804,"mtime":1616159614453,"results":"159","hashOfConfig":"81"},{"size":4002,"mtime":1616160708307,"results":"160","hashOfConfig":"81"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},"1cny99d",{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"163"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"163"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"163"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"163"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"163"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"163"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"1dwemmr",{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"163"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"163"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"163"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"163"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"163"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"163"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"163"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"163"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"163"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"163"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"163"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"163"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"163"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"163"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"163"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"163"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"163"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"163"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"163"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"163"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reportWebVitals.js",[],["349","350"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\App.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\index.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CustomerContext.js",["351"],"import React, { useState, createContext, useContext, useEffect } from 'react';\r\n\r\nimport { listCustomers } from '../graphql/queries'\r\n\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\n\r\nimport { sortAtoZDataByIndex } from '../helpers/sortDataHelpers'\r\n\r\n\r\n\r\n\r\nexport const CustomerContext = createContext();\r\n\r\nexport const CustomerProvider = (props) => {\r\n\r\n    const [customers, setCustomer] = useState([]);\r\n    const [ custLoaded, setCustLoaded ] = useState(false)\r\n    \r\n    \r\n    return (\r\n        <CustomerContext.Provider value={{ \r\n            customers, setCustomer, \r\n            custLoaded, setCustLoaded\r\n            }}>\r\n            {props.children}\r\n        </CustomerContext.Provider>\r\n    );   \r\n    \r\n};\r\n\r\n\r\nexport const CustomerLoad = () => {\r\n\r\n    const { setCustomer, setCustLoaded } = useContext(CustomerContext)\r\n\r\n    useEffect(() => {\r\n        fetchCustomers()\r\n    },[])\r\n\r\n\r\n\r\n    const fetchCustomers = async () => {\r\n        try{\r\n          const custData = await API.graphql(graphqlOperation(listCustomers, {\r\n                limit: '500'\r\n                }))\r\n          const custList = custData.data.listCustomers.items;\r\n          sortAtoZDataByIndex(custList,\"custName\")\r\n          let noDelete = custList.filter(cust => cust[\"_deleted\"]!==true)\r\n          setCustomer(noDelete)\r\n          setCustLoaded(true)\r\n        } catch (error){\r\n          console.log('error on fetching Cust List', error)\r\n        }\r\n      }\r\n  \r\n\r\n    return (\r\n        <React.Fragment>\r\n        </React.Fragment>\r\n    )\r\n    \r\n};\r\n\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\dateTimeHelpers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\OrdersContext.js",["352","353","354"],"import React, { useState, createContext, useContext, useEffect } from 'react';\r\n\r\nimport { FilterOrdersDups } from '../helpers/useFetch'\r\n\r\nimport { sortAtoZDataByIndex, sortZtoADataByIndex } from '../helpers/sortDataHelpers'\r\n\r\nimport { listOrders } from '../graphql/queries'\r\n\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\n\r\n\r\nrequire('dotenv').config()\r\n\r\nexport const OrdersContext = createContext();\r\n\r\n\r\nexport const OrdersProvider = (props) => {\r\n    \r\n    const [orders, setOrders] = useState([]);\r\n    const [ recentOrders, setRecentOrders ] = useState([]);\r\n    const [ originalOrders, setOriginalOrders ] = useState([]);\r\n    const [ ordersLoaded, setOrdersLoaded ] = useState(false)\r\n \r\n    return (\r\n        <OrdersContext.Provider value={{ \r\n            orders, setOrders, \r\n            recentOrders, setRecentOrders,\r\n            originalOrders, setOriginalOrders,\r\n            ordersLoaded, setOrdersLoaded\r\n            }}>\r\n\r\n            {props.children}\r\n\r\n        </OrdersContext.Provider>\r\n    );   \r\n    \r\n};\r\n\r\n\r\n\r\nexport const OrdersLoad = () => {\r\n\r\n    const { setOrders, setOriginalOrders, setOrdersLoaded } = useContext(OrdersContext)\r\n\r\n    useEffect(() => {\r\n        fetchOrders()\r\n    },[])\r\n\r\n\r\n\r\n    const fetchOrders = async () => {\r\n        try{\r\n            const ordData = await API.graphql(graphqlOperation(listOrders, {\r\n                  limit: '5000'\r\n                  }))\r\n            const ordList = ordData.data.listOrders.items;\r\n                \r\n            let noDelete = ordList.filter(cust => cust[\"_deleted\"]!==true)\r\n            let sortedData = sortAtoZDataByIndex(noDelete,\"timeStamp\")\r\n            sortedData = sortAtoZDataByIndex(sortedData, \"prodName\")\r\n                \r\n          \r\n            setOrders(sortedData)\r\n            setOrdersLoaded(true)\r\n            setOriginalOrders(sortedData);\r\n        }  catch (error){\r\n            console.log('error on fetching Orders List', error)\r\n        }\r\n      }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n        </React.Fragment>\r\n    )\r\n    \r\n};\r\n\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ProductsContext.js",["355"],"import React, { useState, createContext, useContext, useEffect } from 'react';\r\n\r\nimport { listProducts } from '../graphql/queries'\r\n\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\n\r\nimport { sortAtoZDataByIndex } from '../helpers/sortDataHelpers'\r\n\r\n\r\n\r\n\r\nexport const ProductsContext = createContext();\r\n\r\nexport const ProductsProvider = (props) => {\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [ prodLoaded, setProdLoaded ] = useState(false)\r\n    \r\n    \r\n    return (\r\n        <ProductsContext.Provider value={{ \r\n            products, setProducts, \r\n            prodLoaded, setProdLoaded\r\n            }}>\r\n            {props.children}\r\n        </ProductsContext.Provider>\r\n    );   \r\n    \r\n};\r\n\r\n\r\nexport const ProductsLoad = () => {\r\n\r\n    const { setProducts, setProdLoaded } = useContext(ProductsContext)\r\n\r\n    useEffect(() => {\r\n        fetchProducts()\r\n      },[])\r\n\r\n\r\n    const fetchProducts = async () => {\r\n        try{\r\n          const prodData = await API.graphql(graphqlOperation(listProducts, {limit: '500'}))\r\n          const prodList = prodData.data.listProducts.items;\r\n          sortAtoZDataByIndex(prodList,\"prodName\")\r\n          setProducts(prodList)\r\n          setProdLoaded(true)\r\n        } catch (error){\r\n          console.log('error on fetching Product List', error)\r\n        }\r\n      }\r\n  \r\n\r\n    return (\r\n        <React.Fragment>\r\n        </React.Fragment>\r\n    )\r\n    \r\n};\r\n\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\StandingContext.js",["356","357","358"],"import React, { useState, createContext, useContext, useEffect } from 'react';\r\n\r\nimport { FilterStandHoldDups } from '../helpers/useFetch'\r\n\r\nimport { sortAtoZDataByIndex } from '../helpers/sortDataHelpers'\r\n\r\nimport { listStandings } from '../graphql/queries'\r\n\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\n\r\n\r\nrequire('dotenv').config()\r\n\r\nexport const StandingContext = createContext();\r\n\r\n\r\nexport const StandingProvider = (props) => {\r\n\r\n    const [standing, setStanding] = useState([]);\r\n    const [ originalStanding, setOriginalStanding ] = useState([]);\r\n    const [ standLoaded, setStandLoaded ] = useState(false)\r\n\r\n    return (\r\n        <StandingContext.Provider value={{ standing, setStanding,originalStanding, setOriginalStanding, standLoaded, setStandLoaded }}>\r\n            {props.children}\r\n        </StandingContext.Provider>\r\n    );   \r\n    \r\n};\r\n\r\n\r\nexport const StandingLoad = () => {\r\n\r\n    const { setStanding, setOriginalStanding, setStandLoaded } = useContext(StandingContext)\r\n\r\n    useEffect(() => {\r\n        fetchStanding()\r\n    },[])\r\n\r\n\r\n\r\n    const fetchStanding = async () => {\r\n        try{\r\n            const standData = await API.graphql(graphqlOperation(listStandings, {\r\n                limit: '5000'\r\n                }))\r\n            const standList = standData.data.listStandings.items;\r\n            let noDelete = standList.filter(stand => stand[\"_deleted\"]!==true)\r\n            \r\n            \r\n            let sortedData = sortAtoZDataByIndex(noDelete,\"timeStamp\")\r\n            \r\n           \r\n            setStanding(sortedData);\r\n            setStandLoaded(true)\r\n        } catch (error){\r\n          console.log('error on fetching Standing List', error)\r\n        }\r\n      }\r\n  \r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n        </React.Fragment>\r\n    )\r\n    \r\n};\r\n\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\sortDataHelpers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\useFetch.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CurrentDataContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\HoldingContext.js",["359","360","361"],"import React, { useState, createContext, useContext, useEffect } from 'react';\r\n\r\nimport { FilterStandHoldDups } from '../helpers/useFetch'\r\n\r\nimport { sortAtoZDataByIndex } from '../helpers/sortDataHelpers'\r\n\r\nimport { listHoldings } from '../graphql/queries'\r\n\r\nimport { API, graphqlOperation } from 'aws-amplify';\r\n\r\n\r\n\r\nrequire('dotenv').config()\r\n\r\nexport const HoldingContext = createContext();\r\n\r\n\r\nexport const HoldingProvider = (props) => {\r\n\r\n    const [holding, setHolding] = useState([]);\r\n    const [ originalHolding, setOriginalHolding ] = useState([]);\r\n    const [ holdLoaded, setHoldLoaded ] = useState(false)\r\n\r\n    return (\r\n        <HoldingContext.Provider value={{ holding, setHolding, originalHolding, setOriginalHolding, holdLoaded, setHoldLoaded }}>\r\n            {props.children}\r\n        </HoldingContext.Provider>\r\n    );   \r\n    \r\n};\r\n\r\n\r\nexport const HoldingLoad = () => {\r\n\r\n\r\n    const { setHolding, setOriginalHolding, setHoldLoaded } = useContext(HoldingContext)\r\n\r\n    useEffect(() => {\r\n        fetchHolding()\r\n    },[])\r\n\r\n\r\n\r\n    const fetchHolding = async () => {\r\n        try{\r\n            const holdData = await API.graphql(graphqlOperation(listHoldings, {\r\n                limit: '5000'\r\n                }))\r\n            const holdList = holdData.data.listHoldings.items;\r\n            let noDelete = holdList.filter(hold => hold[\"_deleted\"]!==true)\r\n            \r\n            \r\n            let sortedData = sortAtoZDataByIndex(noDelete,\"timeStamp\")\r\n           \r\n         \r\n            setHolding(sortedData);\r\n            setHoldLoaded(true)\r\n        } catch (error){\r\n          console.log('error on fetching Hold List', error)\r\n        }\r\n      }\r\n  \r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n        </React.Fragment>\r\n    )\r\n    \r\n};\r\n\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\AppRoutes.js",["362"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\n\r\n\r\nimport Ordering from './pages/ordering/Ordering'\r\nimport DeliveryRouteGrid from './pages/logistics/DeliveryRouteGrid'\r\nimport DeliveryCustomerGrid from './pages/logistics/DeliveryCustomerGrid'\r\nimport DeliveryProductGrid from './pages/logistics/DeliveryProductGrid'\r\nimport EditRoutes from './pages/settings/editRoutes/editRoutes'\r\nimport EditZones from './pages/settings/editZones/editZones'\r\nimport BPBS from './BPBS'\r\nimport BPBN from './BPBN'\r\nimport Croix from './Croix'\r\nimport Customers from './pages/customers/Customers'\r\nimport Products from './pages/products/Products'\r\nimport ByRoute from './pages/logistics/ByRoute/ByRoute'\r\nimport Billing from './Billing'\r\nimport Admin from './Admin'\r\nimport Loader from './Loader'\r\n\r\n\r\nfunction AppRoutes() {\r\n\r\n  return (\r\n    <Router>\r\n      <Loader />\r\n      <div className=\"bigPicture\">\r\n        <Switch>\r\n          <Route path=\"/ordering\" component={Ordering} /> \r\n          <Route path=\"/logistics/byRoute\" component={ByRoute} />  \r\n          <Route path=\"/logistics/byCustomer\" component={DeliveryCustomerGrid} />  \r\n          <Route path=\"/logistics/byProduct\" component={DeliveryProductGrid} />  \r\n          <Route path=\"/settings/editRoutes\" component={EditRoutes} />\r\n          <Route path=\"/settings/editZones\" component={EditZones} />\r\n          <Route path=\"/bpbs\" component={BPBS} />\r\n          <Route path=\"/bpbn\" component={BPBN} />\r\n          <Route path=\"/croix\" component={Croix} />\r\n          <Route path=\"/products\" component={Products} />\r\n          <Route path=\"/customers\" component={Customers} />\r\n          <Route path=\"/billing\" component={Billing} />\r\n          <Route path=\"/admin\" component={Admin} />\r\n          <Route path=\"/\" exact component={Ordering} />\r\n        </Switch>\r\n      </div>\r\n    </Router>        \r\n  );\r\n}\r\n\r\nexport default AppRoutes;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Logistics.js",[],["363","364"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ToggleContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\CartBuildingHelpers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\RoutesContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\AddCartEntryItem.js",["365"],"import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport { CurrentDataContext } from \"../../../../dataContexts/CurrentDataContext\";\r\nimport { OrdersContext } from \"../../../../dataContexts/OrdersContext\";\r\nimport { ProductsContext } from \"../../../../dataContexts/ProductsContext\";\r\nimport { ToggleContext } from \"../../../../dataContexts/ToggleContext\";\r\n\r\nimport { convertDatetoBPBDate } from \"../../../../helpers/dateTimeHelpers\";\r\nimport {\r\n  findAvailableProducts,\r\n  decideWhetherToAddOrModify,\r\n} from \"../../../../helpers/sortDataHelpers\";\r\n\r\nimport { Button } from \"primereact/button\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { InputText } from \"primereact/inputtext\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst AddProductButtons = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  justify-content: space-around;\r\n  background-color: lightgrey;\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst AddCartEntryItem = () => {\r\n  const { products } = useContext(ProductsContext);\r\n  const { orders, setOrders } = useContext(OrdersContext);\r\n  const { chosen, delivDate, route, ponote, currentCartList } = useContext(\r\n    CurrentDataContext\r\n  );\r\n  const { orderTypeWhole } = useContext(ToggleContext);\r\n\r\n  const [pickedProduct, setPickedProduct] = useState();\r\n  const [productList, setProductList] = useState();\r\n\r\n  useEffect(() => {\r\n    let availableProducts = findAvailableProducts(\r\n      products,\r\n      currentCartList,\r\n      chosen,\r\n      delivDate\r\n    );\r\n    setProductList(availableProducts);\r\n  }, [products, orders, chosen, delivDate]);\r\n\r\n  const handleChange = (e) => {\r\n    setPickedProduct(e.target.value);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    let qty = Number(document.getElementById(\"addedProdQty\").value);\r\n\r\n    let newOrder = {\r\n      qty: qty,\r\n      prodName: pickedProduct.prodName,\r\n      custName: chosen,\r\n      PONote: ponote,\r\n      route: route,\r\n      SO: 0,\r\n      isWhole: orderTypeWhole,\r\n      delivDate: convertDatetoBPBDate(delivDate),\r\n    };\r\n    let newOrderList = decideWhetherToAddOrModify(orders, newOrder, delivDate);\r\n    setOrders(newOrderList);\r\n    document.getElementById(\"addedProdQty\").value = null;\r\n    setPickedProduct(\"\");\r\n  };\r\n\r\n  return (\r\n    <AddProductButtons>\r\n      <Dropdown\r\n        options={productList}\r\n        optionLabel=\"prodName\"\r\n        placeholder=\"Select a product\"\r\n        name=\"products\"\r\n        value={pickedProduct}\r\n        onChange={handleChange}\r\n        disabled={chosen !== \"  \" ? false : true}\r\n      />\r\n      <span className=\"p-float-label\">\r\n        <InputText\r\n          id=\"addedProdQty\"\r\n          size=\"10\"\r\n          disabled={chosen !== \"  \" ? false : true}\r\n        />\r\n        <label htmlFor=\"qty\">Quantity</label>\r\n      </span>\r\n      <Button\r\n        label=\"ADD\"\r\n        disabled={chosen === \"  \" || pickedProduct === \"\"}\r\n        icon=\"pi pi-plus\"\r\n        onClick={() => handleAdd()}\r\n      />\r\n    </AddProductButtons>\r\n  );\r\n};\r\n\r\nexport default AddCartEntryItem;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\AddStandingOrderEntry.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\CartEntryItem.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\BuildCurrentCartList.js",["366"],"\r\nimport React, { useContext, useEffect } from \"react\";\r\n\r\nimport { Button } from \"primereact/button\";\r\n\r\nimport { CurrentDataContext } from \"../../../../dataContexts/CurrentDataContext\";\r\nimport { OrdersContext } from \"../../../../dataContexts/OrdersContext\";\r\nimport { StandingContext } from \"../../../../dataContexts/StandingContext\";\r\nimport { ToggleContext } from \"../../../../dataContexts/ToggleContext\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { buildCurrentOrder } from \"../../../../helpers/CartBuildingHelpers\";\r\n\r\nconst clonedeep = require(\"lodash.clonedeep\");\r\n\r\nconst OrderGrid = styled.div`\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  border: none;\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: 0.5fr 3fr 0.5fr 0.5fr;\r\n  row-gap: 4px;\r\n  flex-shrink: 1;\r\n`;\r\nconst TrashCan = styled.div`\r\n  background-color: transparent;\r\n  border: none;\r\n`;\r\n\r\nconst InputBox = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nconst Previous = styled.div`\r\n  font-weight: bold;\r\n  color: red;\r\n`;\r\n\r\nconst BuildCurrentCartList = () => {\r\n  const { orders } = useContext(OrdersContext);\r\n  const { standing } = useContext(StandingContext);\r\n  const {\r\n    chosen,\r\n    delivDate,\r\n    currentCartList,\r\n    setCurrentCartList,\r\n    ponote,\r\n    route,\r\n  } = useContext(CurrentDataContext);\r\n  const { setModifications } = useContext(ToggleContext);\r\n\r\n  useEffect(() => {\r\n    if (chosen !== \"  \") {\r\n      let currentOrderList = buildCurrentOrder(\r\n        chosen,\r\n        delivDate,\r\n        orders,\r\n        standing,\r\n        route,\r\n        ponote\r\n      );\r\n      currentOrderList = currentOrderList.filter((order) => order[\"qty\"] !== 0);\r\n\r\n      setCurrentCartList(currentOrderList);\r\n    }\r\n  }, [chosen, delivDate, orders, standing, route, ponote]);\r\n\r\n  const handleQtyModify = (prodName, qty) => {\r\n    let cartToMod = clonedeep(currentCartList);\r\n    let ind = cartToMod.findIndex((cur) => cur[\"prodName\"] === prodName);\r\n    cartToMod[ind][\"qty\"] = qty;\r\n\r\n    setCurrentCartList(cartToMod);\r\n    setModifications(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <OrderGrid>\r\n        <label></label>\r\n        <label>PRODUCT</label>\r\n        <label>QTY</label>\r\n        <label>PREV</label>\r\n        {currentCartList.map((order) => (\r\n          <React.Fragment key={order[\"prodName\"] + \"b\"}>\r\n            <TrashCan>\r\n              <Button\r\n                icon=\"pi pi-trash\"\r\n                className=\"p-button-outlined p-button-rounded p-button-help p-button-sm\"\r\n                value={0}\r\n                onClick={(e) => {\r\n                  handleQtyModify(order[\"prodName\"], 0);\r\n                }}\r\n                key={order[\"prodName\"] + \"e\"}\r\n                name={order[\"prodName\"]}\r\n                data-qty={order[\"qty\"]}\r\n                id={order[\"prodName\"]}\r\n              />\r\n            </TrashCan>\r\n            <label key={order[\"prodName\"]}>{order[\"prodName\"]}</label>\r\n            <InputBox>\r\n              <input\r\n                type=\"text\"\r\n                size=\"3\"\r\n                maxLength=\"4\"\r\n                key={order[\"prodName\"] + \"c\"}\r\n                id={order[\"prodName\"] + \"item\"}\r\n                name={order[\"prodName\"]}\r\n                data-qty={order[\"qty\"]}\r\n                placeholder={order[\"qty\"]}\r\n                onKeyUp={(e) => {\r\n                  handleQtyModify(order[\"prodName\"], Number(e.target.value));\r\n                }}\r\n                onBlur={(e) => {\r\n                  e.target.value = null;\r\n                }}\r\n              ></input>\r\n            </InputBox>\r\n            <Previous>\r\n              <label key={order[\"prodName\"] + \"d\"}>\r\n                {order[\"SO\"] === order[\"qty\"] ? \"\" : order[\"SO\"]}\r\n              </label>\r\n            </Previous>\r\n          </React.Fragment>\r\n        ))}\r\n      </OrderGrid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BuildCurrentCartList;","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\StandingOrderEntry.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\BuildCurrentStandingList.js",["367"],"import React, { useEffect, useContext } from \"react\";\r\n\r\nimport swal from \"@sweetalert/with-react\";\r\n\r\nimport { Button } from \"primereact/button\";\r\n\r\nimport { ToggleContext } from \"../../../../dataContexts/ToggleContext\";\r\nimport { StandingContext } from \"../../../../dataContexts/StandingContext\";\r\nimport { CurrentDataContext } from \"../../../../dataContexts/CurrentDataContext\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst OrderGrid = styled.div`\r\n  width: 100%;\r\n  font-size: 1em;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  border: none;\r\n  display: grid;\r\n  grid-template-columns: 5fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 0.5fr;\r\n  align-self: center;\r\n  row-gap: 10px;\r\n`;\r\nconst StandInput = styled.input`\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  width: 80%;\r\n`;\r\n\r\nconst entryNotZero = {\r\n  fontSize: \"1.1em\",\r\n  fontWeight: \"bold\",\r\n};\r\n\r\nconst entryZero = {\r\n  fontSize: \"1em\",\r\n  fontWeight: \"normal\",\r\n};\r\n\r\nconst clonedeep = require(\"lodash.clonedeep\");\r\n\r\nconst BuildCurrentStandingList = () => {\r\n  const { standing } = useContext(StandingContext);\r\n  const { setStandList, setModifications } = useContext(ToggleContext);\r\n  const { chosen, standArray, setStandArray } = useContext(CurrentDataContext);\r\n\r\n  useEffect(() => {\r\n    let Stand = standing.filter((stand) => stand[\"custName\"] === chosen);\r\n    if (Stand.length > 0) {\r\n      Stand = Stand[0][\"isStand\"];\r\n    } else {\r\n      Stand = true;\r\n    }\r\n\r\n    setStandList(Stand);\r\n    let buildStandArray = standing.filter(\r\n      (stand) => stand[\"isStand\"] === Stand && stand[\"custName\"] === chosen\r\n    );\r\n\r\n    setStandArray(buildStandArray);\r\n  }, [chosen, standing]);\r\n\r\n  const handleRemove = (index) => {\r\n    let ind = standArray.findIndex((stand) => stand[\"prodName\"] === index);\r\n    let adjustedStanding = clonedeep(standArray);\r\n    adjustedStanding[ind][\"Sun\"] = 0;\r\n    adjustedStanding[ind][\"Mon\"] = 0;\r\n    adjustedStanding[ind][\"Tue\"] = 0;\r\n    adjustedStanding[ind][\"Wed\"] = 0;\r\n    adjustedStanding[ind][\"Thu\"] = 0;\r\n    adjustedStanding[ind][\"Fri\"] = 0;\r\n    adjustedStanding[ind][\"Sat\"] = 0;\r\n    setStandArray(adjustedStanding);\r\n    setModifications(true);\r\n  };\r\n\r\n  const handleQtyModify = (e, qty) => {\r\n    if (isNaN(e.target.value)) {\r\n      e.target.value = null;\r\n      swal({\r\n        text: \"Only Numbers Please\",\r\n        icon: \"warning\",\r\n        buttons: false,\r\n        timer: 2000,\r\n      });\r\n    }\r\n    let day = e.target.dataset.day;\r\n    let prod = e.target.name;\r\n    let arrayToModify = clonedeep(standArray);\r\n    let ind = arrayToModify.findIndex((array) => array[\"prodName\"] === prod);\r\n    arrayToModify[ind][day] = qty;\r\n\r\n    setStandArray(arrayToModify);\r\n\r\n    setModifications(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <OrderGrid>\r\n        <label>PRODUCT</label>\r\n        <label>S</label>\r\n        <label>M</label>\r\n        <label>T</label>\r\n        <label>W</label>\r\n        <label>T</label>\r\n        <label>F</label>\r\n        <label>S</label>\r\n        <label></label>\r\n        {standArray\r\n          ? standArray.map((order) => (\r\n              <React.Fragment key={order[\"prodName\"] + \"frag\"}>\r\n                <label key={order[\"prodName\"] + \"prod\"}>\r\n                  {order[\"prodName\"]}\r\n                </label>\r\n\r\n                <StandInput\r\n                  type=\"text\"\r\n                  key={order[\"prodName\"] + \"Sun\"}\r\n                  size=\"3\"\r\n                  style={Number(order[\"Sun\"]) > 0 ? entryNotZero : entryZero}\r\n                  maxLength=\"3\"\r\n                  id={order[\"prodName\"] + \"_1\"}\r\n                  name={order[\"prodName\"]}\r\n                  placeholder={order[\"Sun\"]}\r\n                  data-day=\"Sun\"\r\n                  onKeyUp={(e) => {\r\n                    handleQtyModify(e, Number(e.target.value));\r\n                  }}\r\n                  onBlur={(e) => {\r\n                    e.target.value = null;\r\n                  }}\r\n                ></StandInput>\r\n                <StandInput\r\n                  type=\"text\"\r\n                  key={order[\"prodName\"] + \"Mon\"}\r\n                  size=\"3\"\r\n                  style={Number(order[\"Mon\"]) > 0 ? entryNotZero : entryZero}\r\n                  maxLength=\"3\"\r\n                  id={order[\"prodName\"] + \"_2\"}\r\n                  name={order[\"prodName\"]}\r\n                  placeholder={order[\"Mon\"]}\r\n                  data-day=\"Mon\"\r\n                  onKeyUp={(e) => {\r\n                    handleQtyModify(e, Number(e.target.value));\r\n                  }}\r\n                  onBlur={(e) => {\r\n                    e.target.value = \"\";\r\n                  }}\r\n                ></StandInput>\r\n                <StandInput\r\n                  type=\"text\"\r\n                  key={order[\"prodName\"] + \"Tue\"}\r\n                  size=\"3\"\r\n                  style={Number(order[\"Tue\"]) > 0 ? entryNotZero : entryZero}\r\n                  maxLength=\"3\"\r\n                  id={order[\"prodName\"] + \"_3\"}\r\n                  name={order[\"prodName\"]}\r\n                  placeholder={order[\"Tue\"]}\r\n                  data-day=\"Tue\"\r\n                  onKeyUp={(e) => {\r\n                    handleQtyModify(e, Number(e.target.value));\r\n                  }}\r\n                  onBlur={(e) => {\r\n                    e.target.value = \"\";\r\n                  }}\r\n                ></StandInput>\r\n                <StandInput\r\n                  type=\"text\"\r\n                  key={order[\"prodName\"] + \"Wed\"}\r\n                  size=\"3\"\r\n                  style={Number(order[\"Wed\"]) > 0 ? entryNotZero : entryZero}\r\n                  maxLength=\"3\"\r\n                  id={order[\"prodName\"] + \"_4\"}\r\n                  name={order[\"prodName\"]}\r\n                  placeholder={order[\"Wed\"]}\r\n                  data-day=\"Wed\"\r\n                  onKeyUp={(e) => {\r\n                    handleQtyModify(e, Number(e.target.value));\r\n                  }}\r\n                  onBlur={(e) => {\r\n                    e.target.value = \"\";\r\n                  }}\r\n                ></StandInput>\r\n                <StandInput\r\n                  type=\"text\"\r\n                  key={order[\"prodName\"] + \"Thu\"}\r\n                  size=\"3\"\r\n                  style={Number(order[\"Thu\"]) > 0 ? entryNotZero : entryZero}\r\n                  maxLength=\"3\"\r\n                  id={order[\"prodName\"] + \"_5\"}\r\n                  name={order[\"prodName\"]}\r\n                  placeholder={order[\"Thu\"]}\r\n                  data-day=\"Thu\"\r\n                  onKeyUp={(e) => {\r\n                    handleQtyModify(e, Number(e.target.value));\r\n                  }}\r\n                  onBlur={(e) => {\r\n                    e.target.value = \"\";\r\n                  }}\r\n                ></StandInput>\r\n                <StandInput\r\n                  type=\"text\"\r\n                  key={order[\"prodName\"] + \"Fri\"}\r\n                  size=\"3\"\r\n                  style={Number(order[\"Fri\"]) > 0 ? entryNotZero : entryZero}\r\n                  maxLength=\"3\"\r\n                  id={order[\"prodName\"] + \"_6\"}\r\n                  name={order[\"prodName\"]}\r\n                  placeholder={order[\"Fri\"]}\r\n                  data-day=\"Fri\"\r\n                  onKeyUp={(e) => {\r\n                    handleQtyModify(e, Number(e.target.value));\r\n                  }}\r\n                  onBlur={(e) => {\r\n                    e.target.value = \"\";\r\n                  }}\r\n                ></StandInput>\r\n                <StandInput\r\n                  type=\"text\"\r\n                  key={order[\"prodName\"] + \"Sat\"}\r\n                  size=\"3\"\r\n                  style={Number(order[\"Sat\"]) > 0 ? entryNotZero : entryZero}\r\n                  maxLength=\"3\"\r\n                  id={order[\"prodName\"] + \"_7\"}\r\n                  name={order[\"prodName\"]}\r\n                  placeholder={order[\"Sat\"]}\r\n                  data-day=\"Sat\"\r\n                  onKeyUp={(e) => {\r\n                    handleQtyModify(e, Number(e.target.value));\r\n                  }}\r\n                  onBlur={(e) => {\r\n                    e.target.value = \"\";\r\n                  }}\r\n                ></StandInput>\r\n\r\n                <Button\r\n                  icon=\"pi pi-trash\"\r\n                  className=\"p-button-outlined p-button-rounded p-button-help p-button-sm\"\r\n                  key={order[\"prodName\"] + \"rem\"}\r\n                  name={order[\"prodName\"]}\r\n                  onClick={(e) => handleRemove(order[\"prodName\"])}\r\n                ></Button>\r\n              </React.Fragment>\r\n            ))\r\n          : \"\"}\r\n      </OrderGrid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BuildCurrentStandingList;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\StandBuildingHelpers.js",[],["368","369"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\calendarBuildHelper.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Nav.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\BPBS.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\BPBN.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Croix.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Billing.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Admin.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Loader.js",["370"],"import React, { useContext, useEffect } from 'react';\r\n\r\n\r\nimport { ProgressSpinner } from 'primereact/progressspinner';\r\nimport { ToggleContext } from './dataContexts/ToggleContext';\r\nimport { CustomerContext } from './dataContexts/CustomerContext';\r\nimport { OrdersContext } from './dataContexts/OrdersContext';\r\nimport { ProductsContext } from './dataContexts/ProductsContext';\r\nimport { StandingContext } from './dataContexts/StandingContext';\r\nimport { HoldingContext } from './dataContexts/HoldingContext';\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst LoaderSetup = styled.div`\r\n    width: 100%;\r\n    margin: 45vh 45%;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 200;\r\n    `\r\n\r\nconst LoaderBack = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 199;\r\n    background-color:rgba(65, 64, 99, .5);\r\n    `\r\n\r\nconst Loader = () => {\r\n\r\n    let { isLoading, setIsLoading } = useContext(ToggleContext)\r\n\r\n    let { custLoaded } = useContext(CustomerContext)\r\n    let { holdLoaded } = useContext(HoldingContext)\r\n    let { ordersLoaded } = useContext(OrdersContext)\r\n    let { prodLoaded } = useContext(ProductsContext)\r\n    let { standLoaded } = useContext(StandingContext)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        if (custLoaded === true &&\r\n            holdLoaded === true &&\r\n            ordersLoaded === true &&\r\n            prodLoaded === true &&\r\n            standLoaded === true){\r\n                setIsLoading(false)\r\n            }\r\n    },[custLoaded, holdLoaded, ordersLoaded, prodLoaded, standLoaded])\r\n    \r\n    return (\r\n        \r\n            <React.Fragment>\r\n                {isLoading ? <LoaderBack><LoaderSetup><ProgressSpinner/></LoaderSetup></LoaderBack> :''}\r\n            </React.Fragment>\r\n        \r\n    )\r\n    \r\n};\r\n\r\nexport default Loader\r\n\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\LogisticsTabs.js",[],["371","372"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByCustomer.js",["373","374","375","376"],"import React,{ useContext, useEffect, useState } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\n\r\nimport { CurrentDataContext } from '../../dataContexts/CurrentDataContext';\r\nimport { OrdersContext } from '../../dataContexts/OrdersContext'\r\nimport { StandingContext } from '../../dataContexts/StandingContext'\r\nimport { ProductsContext } from '../../dataContexts/ProductsContext'\r\n\r\nimport { buildCartList, buildStandList } from '../../helpers/CartBuildingHelpers'\r\n\r\nimport { sortAtoZDataByIndex } from '../../helpers/sortDataHelpers'\r\n\r\nconst ByCustomer = () => {\r\n\r\n    const { orders } = useContext(OrdersContext)\r\n    const { standing } = useContext(StandingContext)\r\n    const { delivDate, route, setRoute } = useContext(CurrentDataContext)\r\n\r\n    const [ data, setData ] = useState([])\r\n    const [expandedRows, setExpandedRows] = useState([]);\r\n\r\n\r\n    const headerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span>{data.customer}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const footerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const constructData = () => {\r\n\r\n        \r\n        let cartList = buildCartList(\"*\",delivDate,orders)\r\n        let standList = buildStandList(\"*\", delivDate, standing)\r\n\r\n        let orderList = cartList.concat(standList)\r\n   \r\n        for (let i=0; i<orderList.length; ++i ){\r\n            for (let j=i+1; j<orderList.length; ++j){\r\n                if (orderList[i][1] === orderList[j][1] && orderList[i][2] === orderList[j][2]){\r\n                    orderList.splice(j,1);\r\n                }\r\n            }\r\n        }\r\n        orderList = orderList.filter(order => Number(order[0])>0)\r\n        if (route!==\"\"){\r\n            orderList = orderList.filter(order => order[4] === route)\r\n        }\r\n\r\n        \r\n        \r\n        let data=[]\r\n        for (let order of orderList){\r\n                    let newData={}\r\n                    newData[\"customer\"]= order[2]\r\n                    newData[\"product\"] = order[1]\r\n                    newData[\"qty\"] = order[0]\r\n\r\n                \r\n            \r\n\r\n            data.push(newData)\r\n        }\r\n        \r\n        return data\r\n    \r\n    }\r\n\r\n    useEffect(() => {\r\n        let dat = constructData()\r\n        setData(dat)\r\n\r\n    },[delivDate, route])\r\n\r\n    useEffect(() => {\r\n        setRoute('')\r\n    },[])\r\n\r\n    \r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <DataTable value={data}\r\n                    className=\"p-datatable-gridlines p-datatable-sm\"\r\n                    rowGroupMode=\"subheader\" groupField=\"customer\" \r\n                    sortMode=\"single\" sortField=\"customer\" sortOrder={1}\r\n                    expandableRowGroups expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\r\n                        <Column field=\"customer\" header=\"Customer\" style={{width:'35%'}}></Column>\r\n                        <Column field=\"product\" header=\"Product\" style={{width:'35%'}}></Column>\r\n                        <Column field=\"qty\" header=\"Quantity\" style={{width:'15%'}}></Column>\r\n                        <Column field=\"ea\" header=\"Total/ea.\" style={{width:'15%'}}></Column>\r\n                </DataTable>  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ByCustomer","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByProduct.js",["377","378","379","380","381"],"import React,{ useContext, useEffect, useState } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\n\r\nimport { CurrentDataContext } from '../../dataContexts/CurrentDataContext';\r\nimport { OrdersContext } from '../../dataContexts/OrdersContext'\r\nimport { StandingContext } from '../../dataContexts/StandingContext'\r\nimport { ProductsContext } from '../../dataContexts/ProductsContext'\r\n\r\nimport { buildCartList, buildStandList } from '../../helpers/CartBuildingHelpers'\r\n\r\nimport { sortAtoZDataByIndex } from '../../helpers/sortDataHelpers'\r\n\r\nconst ByProduct = () => {\r\n\r\n    const { orders } = useContext(OrdersContext)\r\n    const { standing } = useContext(StandingContext)\r\n    const { delivDate, route, setRoute } = useContext(CurrentDataContext)\r\n\r\n    const [ data, setData ] = useState([])\r\n    const [expandedRows, setExpandedRows] = useState([]);\r\n\r\n\r\n    const headerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                <span>{data.product}</span>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const footerTemplate = (data) => {\r\n        return (\r\n            <React.Fragment>\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    const constructData = () => {\r\n\r\n        \r\n        let cartList = buildCartList(\"*\",delivDate,orders)\r\n        let standList = buildStandList(\"*\", delivDate, standing)\r\n\r\n        let orderList = cartList.concat(standList)\r\n   \r\n        for (let i=0; i<orderList.length; ++i ){\r\n            for (let j=i+1; j<orderList.length; ++j){\r\n                if (orderList[i][1] === orderList[j][1] && orderList[i][2] === orderList[j][2]){\r\n                    orderList.splice(j,1);\r\n                }\r\n            }\r\n        }\r\n        orderList = orderList.filter(order => Number(order[0])>0)\r\n        if (route!==\"\"){\r\n            orderList = orderList.filter(order => order[4] === route)\r\n        }\r\n\r\n        let listOfCustomers = orderList.map(order => order[2])\r\n        listOfCustomers = new Set(listOfCustomers)\r\n        \r\n        let data=[]\r\n        for (let order of orderList){\r\n                    let newData={}\r\n                    newData[\"product\"]= order[1]\r\n                    newData[\"customer\"] = order[2]\r\n                    newData[\"qty\"] = order[0]\r\n\r\n                \r\n            \r\n\r\n            data.push(newData)\r\n        }\r\n        \r\n        return data\r\n    \r\n    }\r\n\r\n    useEffect(() => {\r\n        let dat = constructData()\r\n        setData(dat)\r\n\r\n    },[delivDate, route])\r\n    \r\n    \r\n    useEffect(() => {\r\n        setRoute('')\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <DataTable value={data}\r\n                    className=\"p-datatable-gridlines p-datatable-sm\"\r\n                    rowGroupMode=\"subheader\" groupField=\"product\" \r\n                    sortMode=\"single\" sortField=\"product\" sortOrder={1}\r\n                    expandableRowGroups expandedRows={expandedRows} onRowToggle={(e) => setExpandedRows(e.data)}\r\n                    rowGroupHeaderTemplate={headerTemplate} rowGroupFooterTemplate={footerTemplate}>\r\n                        \r\n                        <Column field=\"product\" header=\"Product\" style={{width:'35%'}}></Column>\r\n                        <Column field=\"customer\" header=\"Customer\" style={{width:'35%'}}></Column>\r\n                        <Column field=\"qty\" header=\"Quantity\" style={{width:'15%'}}></Column>\r\n                        <Column field=\"ea\" header=\"Total/ea.\" style={{width:'15%'}}></Column>\r\n                </DataTable>  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ByProduct","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\LogisticsFunctions.js",["382","383","384","385","386"],"import React, { useContext, useEffect } from 'react';\r\n\r\nimport { CurrentDataContext } from '../../dataContexts/CurrentDataContext';\r\nimport { CustomerContext } from '../../dataContexts/CustomerContext';\r\nimport { ProductsContext } from '../../dataContexts/ProductsContext';\r\nimport { OrdersContext } from '../../dataContexts/OrdersContext';\r\nimport { StandingContext } from '../../dataContexts/StandingContext';\r\nimport { HoldingContext } from '../../dataContexts/HoldingContext';\r\nimport { RoutesContext } from '../../dataContexts/RoutesContext';\r\nimport { ToggleContext } from '../../dataContexts/ToggleContext';\r\n\r\nimport { createRouteList } from '../../helpers/sortDataHelpers'\r\n\r\n\r\n\r\nconst LogisticsFunctions = () => {\r\n\r\n    const { customers, setCustLoaded } = useContext(CustomerContext)\r\n    const { products, setProdLoaded } = useContext(ProductsContext)\r\n    const { setRoutes } = useContext(RoutesContext)\r\n    const { orders, setOrdersLoaded } = useContext(OrdersContext)\r\n    const { standing, setStandLoaded } = useContext(StandingContext)\r\n    const { chosen, delivDate, setCalendarEvents } = useContext(CurrentDataContext)\r\n    const { setRouteIsOn } = useContext(ToggleContext)\r\n   \r\n\r\n\r\n    //  T O G G L E S \r\n\r\n    // when a customer is chosen, route and ponote are turned on\r\n\r\n    useEffect(() => {\r\n        if (orders.length<1){\r\n            setOrdersLoaded(false)\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (customers.length<1){\r\n            setCustLoaded(false)\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (products.length<1){\r\n            setProdLoaded(false)\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (standing.length<1){\r\n            setStandLoaded(false)\r\n        }\r\n    },[])\r\n\r\n\r\n    setRouteIsOn(true)\r\n\r\n\r\n\r\n    //  F U N C T I O N S\r\n    \r\n    // Create a new route list if customers changes\r\n    useEffect(()=> {\r\n        let routeList = createRouteList(customers)\r\n        setRoutes(routeList)\r\n    },[customers, setRoutes])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n       \r\n        let calendarEvents = [{title: '',\r\n                            date: delivDate,\r\n                            display: 'background'}]\r\n\r\n\r\n        setCalendarEvents(calendarEvents)\r\n    },[chosen, delivDate, orders, standing, setCalendarEvents])\r\n    \r\n\r\n    return (\r\n        <React.Fragment>         \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default LogisticsFunctions","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\DeliveryRouteGrid.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\DeliveryCustomerGrid.js",["387"],"import React, { useContext } from 'react';\r\n\r\n\r\nimport Calendar from '../ordering/Parts/Calendar'\r\nimport ByCustomer from './ByCustomer.js'\r\n\r\nimport { CustomerContext, CustomerLoad } from '../../dataContexts/CustomerContext'\r\nimport { OrdersContext, OrdersLoad } from '../../dataContexts/OrdersContext'\r\nimport { ProductsContext, ProductsLoad } from '../../dataContexts/ProductsContext'\r\nimport { StandingContext, StandingLoad } from '../../dataContexts/StandingContext'\r\nimport LogisticsFunctions from './LogisticsFunctions';\r\n\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\n\r\nimport styled from 'styled-components'\r\n\r\nconst LogisticsContainer = styled.div`\r\n    font-family: 'Montserrat', sans-serif;\r\n    margin: auto;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 2fr; \r\n    `\r\n\r\n  const InfoContainer = styled.div`\r\n    border: 1px solid lightgray;\r\n    margin: 10px 20px;\r\n    padding: 10px 10px;\r\n    box-sizing: border-box;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    width: 100%;\r\n    `\r\n  const BasicContainer = styled.div`\r\n    border: 1px solid lightgray;\r\n    margin: 10px 20px;\r\n    padding: 10px 10px;\r\n    `\r\n\r\n\r\n\r\n\r\n\r\nfunction Logistics() {\r\n\r\n  const delivDate = \"01/02/2021\"\r\n\r\n  const cities = [\r\n    {name: 'New York', code: 'NY'},\r\n    {name: 'Rome', code: 'RM'},\r\n    {name: 'London', code: 'LDN'},\r\n    {name: 'Istanbul', code: 'IST'},\r\n    {name: 'Paris', code: 'PRS'}\r\n  ];\r\n\r\n  \r\n  const { standLoaded } = useContext(StandingContext)\r\n  const { prodLoaded } = useContext(ProductsContext)\r\n  const { custLoaded } = useContext(CustomerContext)\r\n  const { ordersLoaded } = useContext(OrdersContext)\r\n\r\n  return (\r\n      <LogisticsContainer>\r\n       \r\n        {!standLoaded ? <StandingLoad /> : ''}\r\n        {!prodLoaded ? <ProductsLoad /> : ''}\r\n        {!custLoaded ? <CustomerLoad /> : ''}\r\n        {!ordersLoaded ? <OrdersLoad /> : ''}\r\n        <BasicContainer>\r\n          <Calendar />\r\n        </BasicContainer>\r\n        \r\n          <div id=\"orderCommand\">\r\n            <InfoContainer>\r\n              <label htmlFor=\"delivDate\" className=\"p-d-block\">Delivery Date</label>\r\n              <InputText id=\"delivDate\" value={delivDate} />\r\n              <Dropdown options={cities} optionLabel=\"name\" placeholder=\"Select a route\"/>\r\n              <Button label=\"Print\" icon=\"pi pi-print\" className=\"p-button-raised p-button-rounded p-button-success\" />\r\n              <Button label=\"Refresh\" icon=\"pi pi-refresh\" className=\"p-button-raised p-button-rounded p-button-info\" />\r\n            </InfoContainer>\r\n            <BasicContainer><ByCustomer /> </BasicContainer>\r\n          </div> \r\n         \r\n\r\n\r\n          </LogisticsContainer>\r\n        \r\n\r\n      \r\n        \r\n      \r\n            \r\n  );\r\n}\r\n\r\nexport default Logistics;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByRoute.js",["388"],"import React,{ useContext, useEffect, useState } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\n\r\nimport { CurrentDataContext } from '../../dataContexts/CurrentDataContext';\r\nimport { OrdersContext } from '../../dataContexts/OrdersContext'\r\nimport { StandingContext } from '../../dataContexts/StandingContext'\r\nimport { ProductsContext } from '../../dataContexts/ProductsContext'\r\n\r\nimport { buildCartList, buildStandList } from '../../helpers/CartBuildingHelpers'\r\n\r\nimport { sortAtoZDataByIndex } from '../../helpers/sortDataHelpers'\r\n\r\nconst ByCustomer = () => {\r\n\r\n    const { orders } = useContext(OrdersContext)\r\n    const { standing } = useContext(StandingContext)\r\n    const { products } = useContext(ProductsContext)\r\n    const { delivDate, route } = useContext(CurrentDataContext)\r\n\r\n    const [ columns, setColumns ] = useState([])\r\n    const [ data, setData ] = useState([])\r\n\r\n\r\n    const constructColumns = () => {\r\n      \r\n        let cartList = buildCartList(\"*\",delivDate,orders)\r\n        let standList = buildStandList(\"*\", delivDate, standing)\r\n\r\n        let orderList = cartList.concat(standList)\r\n   \r\n        for (let i=0; i<orderList.length; ++i ){\r\n            for (let j=i+1; j<orderList.length; ++j){\r\n                if (orderList[i][1] === orderList[j][1] && \r\n                    orderList[i][2] === orderList[j][2] \r\n                    ){\r\n                    orderList.splice(j,1);\r\n                }\r\n            }\r\n        }\r\n        orderList = orderList.filter(order => order[4] === route)\r\n\r\n        let listOfProducts = orderList.map(order => order[1])\r\n        listOfProducts = new Set(listOfProducts)\r\n        let prodArray = []\r\n        for (let prod of listOfProducts){\r\n            for (let item of products){\r\n                if (prod === item[1]){\r\n                    let newItem = [prod, item[2],item[4],item[5]]\r\n                    prodArray.push(newItem)\r\n                }\r\n            }\r\n        }\r\n\r\n        sortAtoZDataByIndex(prodArray,2)\r\n\r\n\r\n        let columns = [{field: 'customer', header: 'Customer', width: {width:'10%'} }]\r\n        for (let prod of prodArray){\r\n            let newCol = {field: prod[0], header: prod[1], width: {width:'30px'}}\r\n            columns.push(newCol)\r\n        }\r\n        return columns\r\n        \r\n    }\r\n\r\n    const constructData = () => {\r\n\r\n        \r\n        let cartList = buildCartList(\"*\",delivDate,orders)\r\n        let standList = buildStandList(\"*\", delivDate, standing)\r\n\r\n        let orderList = cartList.concat(standList)\r\n   \r\n        for (let i=0; i<orderList.length; ++i ){\r\n            for (let j=i+1; j<orderList.length; ++j){\r\n                if (orderList[i][1] === orderList[j][1] && orderList[i][2] === orderList[j][2]){\r\n                    orderList.splice(j,1);\r\n                }\r\n            }\r\n        }\r\n\r\n        orderList = orderList.filter(order => order[4] === route)\r\n        let listOfCustomers = orderList.map(order => order[2])\r\n        listOfCustomers = new Set(listOfCustomers)\r\n        \r\n        let data=[]\r\n        for (let cust of listOfCustomers){\r\n            let newData = {\"customer\": cust}\r\n            for (let order of orderList){\r\n                if (order[2] === cust){\r\n                    newData[order[1]] = order[0]\r\n                }\r\n            }\r\n\r\n            data.push(newData)\r\n        }\r\n        \r\n        return data\r\n    \r\n    }\r\n\r\n    useEffect(() => {\r\n        let col = constructColumns()\r\n        let dat = constructData()\r\n        setColumns(col)\r\n        setData(dat)\r\n\r\n    },[delivDate, route])\r\n    \r\n    \r\n\r\n    \r\n    const dynamicColumns = columns.map((col,i) => {\r\n        return <Column npmkey={col.field} field={col.field} header={col.header} style={col.width}/>;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <DataTable className=\"p-datatable-gridlines p-datatable-sm p-datatable-striped\" \r\n                    value={data} resizableColumns columnResizeMode=\"fit\">\r\n                    {dynamicColumns}\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ByCustomer","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\DeliveryProductGrid.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Ordering.js",["389"],"import React, { useContext, useEffect } from \"react\";\r\n\r\nimport Calendar from \"./Parts/Calendar\";\r\nimport CurrentOrderInfo from \"./Parts/CurrentOrderInfo\";\r\nimport CurrentOrderList from \"./Parts/CurrentOrderList\";\r\nimport OrderCommandLine from \"./Parts/OrderCommandLine\";\r\nimport OrderEntryButtons from \"./Parts/OrderEntryButtons\";\r\n\r\nimport {\r\n  CustomerContext,\r\n  CustomerLoad,\r\n} from \"../../dataContexts/CustomerContext\";\r\nimport { OrdersContext, OrdersLoad } from \"../../dataContexts/OrdersContext\";\r\nimport {\r\n  ProductsContext,\r\n  ProductsLoad,\r\n} from \"../../dataContexts/ProductsContext\";\r\nimport {\r\n  StandingContext,\r\n  StandingLoad,\r\n} from \"../../dataContexts/StandingContext\";\r\nimport { HoldingContext, HoldingLoad } from \"../../dataContexts/HoldingContext\";\r\nimport { CurrentDataContext } from \"../../dataContexts/CurrentDataContext\";\r\nimport { ToggleContext } from \"../../dataContexts/ToggleContext\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst MainWindow = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: auto;\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n`;\r\n\r\nconst BasicContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 95%;\r\n  border: 1px solid lightgray;\r\n  padding: 10px 10px;\r\n  margin: 0px 10px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nfunction Ordering(props) {\r\n  const { standLoaded } = useContext(StandingContext);\r\n  const { prodLoaded } = useContext(ProductsContext);\r\n  const { custLoaded } = useContext(CustomerContext);\r\n  const { ordersLoaded } = useContext(OrdersContext);\r\n  const { holdLoaded } = useContext(HoldingContext);\r\n  const { setChosen } = useContext(CurrentDataContext);\r\n  const { setCartList } = useContext(ToggleContext);\r\n\r\n  useEffect(() => {\r\n    if (props.location.search) {\r\n      setChosen(\r\n        props.location.search\r\n          .split(\"&\")[1]\r\n          .split(\"=\")[1]\r\n          .replace(/%20/g, \" \")\r\n          .replace(/%27/g, \"'\")\r\n      );\r\n      if (\r\n        props.location.search\r\n          .split(\"&\")[0]\r\n          .split(\"=\")[1]\r\n          .replace(/%20/g, \" \")\r\n          .replace(/%27/g, \"'\") === \"true\"\r\n      ) {\r\n        setCartList(true);\r\n      } else {\r\n        setCartList(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <MainWindow>\r\n      {!ordersLoaded ? <OrdersLoad /> : \"\"}\r\n      {!custLoaded ? <CustomerLoad /> : \"\"}\r\n      {!prodLoaded ? <ProductsLoad /> : \"\"}\r\n      {!standLoaded ? <StandingLoad /> : \"\"}\r\n      {!holdLoaded ? <HoldingLoad /> : \"\"}\r\n\r\n      <BasicContainer>\r\n        <Calendar />\r\n      </BasicContainer>\r\n      <BasicContainer>\r\n        <OrderCommandLine />\r\n        <CurrentOrderInfo />\r\n        <CurrentOrderList />\r\n        <OrderEntryButtons />\r\n      </BasicContainer>\r\n    </MainWindow>\r\n  );\r\n}\r\n\r\nexport default Ordering;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\OrderCommandLine.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\CurrentOrderList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\CurrentOrderInfo.js",["390","391","392","393","394","395","396"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\OrderEntryButtons.js",["397","398","399","400","401","402","403"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\calendar.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\Parts\\Calendar.js",["404"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Customers.js",["405"],"import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  CustomerContext,\r\n  CustomerLoad,\r\n} from \"../../dataContexts/CustomerContext\";\r\nimport { ProductsContext } from \"../../dataContexts/ProductsContext\";\r\nimport { OrdersContext } from \"../../dataContexts/OrdersContext\";\r\nimport { StandingContext } from \"../../dataContexts/StandingContext\";\r\nimport { HoldingContext } from \"../../dataContexts/HoldingContext\";\r\n\r\nimport CustomerList from \"./Parts/CustomerList\";\r\nimport Name from \"./Parts/Name\";\r\nimport Location from \"./Parts/Location\";\r\nimport Contact from \"./Parts/Contact\";\r\nimport Billing from \"./Parts/Billing\";\r\nimport Buttons from \"./Parts/Buttons\";\r\n\r\nconst MainWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 0.5fr;\r\n  height: 100vh;\r\n`;\r\n\r\nconst DescripWrapper = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-items: start;\r\n  align-content: flex-start;\r\n  width: 100%;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst GroupBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: flex-start;\r\n  border: 1px solid lightgrey;\r\n  width: 95%;\r\n  margin: 5px 10px;\r\n  padding: 5px 20px;\r\n`;\r\n\r\nfunction Customers() {\r\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\r\n\r\n  const { customers, custLoaded, setCustLoaded } = useContext(CustomerContext);\r\n  const { setProdLoaded } = useContext(ProductsContext);\r\n  let { setHoldLoaded } = useContext(HoldingContext);\r\n  let { setOrdersLoaded } = useContext(OrdersContext);\r\n  let { setStandLoaded } = useContext(StandingContext);\r\n\r\n  useEffect(() => {\r\n    if (!customers) {\r\n      setCustLoaded(false);\r\n    }\r\n    setProdLoaded(true);\r\n    setHoldLoaded(true);\r\n    setOrdersLoaded(true);\r\n    setStandLoaded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!custLoaded ? <CustomerLoad /> : \"\"}\r\n      <MainWrapper>\r\n        <CustomerList\r\n          selectedCustomer={selectedCustomer}\r\n          setSelectedCustomer={setSelectedCustomer}\r\n        />\r\n        {selectedCustomer && (\r\n          <React.Fragment>\r\n            <DescripWrapper>\r\n              <GroupBox id=\"Name\">\r\n                <Name\r\n                  selectedCustomer={selectedCustomer}\r\n                  setSelectedCustomer={setSelectedCustomer}\r\n                />\r\n              </GroupBox>\r\n\r\n              <GroupBox id=\"Location\">\r\n                <Location\r\n                  selectedCustomer={selectedCustomer}\r\n                  setSelectedCustomer={setSelectedCustomer}\r\n                />\r\n              </GroupBox>\r\n            </DescripWrapper>\r\n\r\n            <DescripWrapper>\r\n              <GroupBox id=\"Contact\">\r\n                <Contact\r\n                  selectedCustomer={selectedCustomer}\r\n                  setSelectedCustomer={setSelectedCustomer}\r\n                />\r\n              </GroupBox>\r\n\r\n              <GroupBox id=\"Billing\">\r\n                <Billing\r\n                  selectedCustomer={selectedCustomer}\r\n                  setSelectedCustomer={setSelectedCustomer}\r\n                />\r\n              </GroupBox>\r\n            </DescripWrapper>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        <DescripWrapper>\r\n          <Buttons\r\n            selectedCustomer={selectedCustomer}\r\n            setSelectedCustomer={setSelectedCustomer}\r\n          />\r\n        </DescripWrapper>\r\n      </MainWrapper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Customers;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Products.js",["406"],"import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { CustomerContext } from \"../../dataContexts/CustomerContext\";\r\nimport { \r\n  ProductsContext,\r\n  ProductsLoad\r\n  } from \"../../dataContexts/ProductsContext\";\r\nimport { OrdersContext } from \"../../dataContexts/OrdersContext\";\r\nimport { StandingContext } from \"../../dataContexts/StandingContext\";\r\nimport { HoldingContext } from \"../../dataContexts/HoldingContext\";\r\n\r\nimport ProductList from \"./Parts/ProductList\";\r\nimport Name from \"./Parts/Name\";\r\nimport Description from \"./Parts/Description\";\r\nimport Packing from \"./Parts/Packing\";\r\nimport Baking from \"./Parts/Baking\";\r\nimport Billing from \"./Parts/Billing\";\r\nimport Buttons from \"./Parts/Buttons\";\r\n\r\nconst MainWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 0.5fr;\r\n  height: 100vh;\r\n`;\r\n\r\nconst DescripWrapper = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-items: start;\r\n  align-content: flex-start;\r\n  width: 100%;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst GroupBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: flex-start;\r\n  border: 1px solid lightgrey;\r\n  width: 95%;\r\n  margin: 5px 10px;\r\n  padding: 5px 20px;\r\n`;\r\n\r\nfunction Products() {\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n  const { products, prodLoaded, setProdLoaded } = useContext(ProductsContext);\r\n  const { setCustLoaded } = useContext(CustomerContext);\r\n  let { setHoldLoaded } = useContext(HoldingContext);\r\n  let { setOrdersLoaded } = useContext(OrdersContext);\r\n  let { setStandLoaded } = useContext(StandingContext);\r\n\r\n  useEffect(() => {\r\n    if (!products) {\r\n      setProdLoaded(false);\r\n    }\r\n    setCustLoaded(true);\r\n    setHoldLoaded(true);\r\n    setOrdersLoaded(true);\r\n    setStandLoaded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!prodLoaded ? <ProductsLoad /> : \"\"}\r\n      <MainWrapper>\r\n        <ProductList\r\n          selectedProduct={selectedProduct}\r\n          setSelectedProduct={setSelectedProduct}\r\n        />\r\n        {selectedProduct && (\r\n          <React.Fragment>\r\n            <DescripWrapper>\r\n              <GroupBox id=\"Name\">\r\n                <Name\r\n                  selectedProduct={selectedProduct}\r\n                  setSelectedProduct={setSelectedProduct}\r\n                />\r\n              </GroupBox>\r\n\r\n              <GroupBox id=\"Description\">\r\n                <Description\r\n                  selectedProduct={selectedProduct}\r\n                  setSelectedProduct={setSelectedProduct}\r\n                />\r\n              </GroupBox>\r\n\r\n              <GroupBox id=\"Billing\">\r\n                <Billing\r\n                  selectedProduct={selectedProduct}\r\n                  setSelectedProduct={setSelectedProduct}\r\n                />\r\n              </GroupBox>\r\n            </DescripWrapper>\r\n\r\n            <DescripWrapper>\r\n              <GroupBox id=\"Packing\">\r\n                <Packing\r\n                  selectedProduct={selectedProduct}\r\n                  setSelectedProduct={setSelectedProduct}\r\n                />\r\n              </GroupBox>\r\n\r\n              <GroupBox id=\"Baking\">\r\n                <Baking\r\n                  selectedProduct={selectedProduct}\r\n                  setSelectedProduct={setSelectedProduct}\r\n                />\r\n              </GroupBox>\r\n            </DescripWrapper>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        <DescripWrapper>\r\n          <Buttons\r\n            selectedProduct={selectedProduct}\r\n            setSelectedProduct={setSelectedProduct}\r\n          />\r\n        </DescripWrapper>\r\n      </MainWrapper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\aws-exports.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\graphql\\queries.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\graphql\\mutations.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\CustomerList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\Name.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\Location.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\Contact.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\Billing.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\customers\\Parts\\Buttons.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\formHelpers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editRoutes\\editRoutes.js",["407"],"import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { CustomerContext } from \"../../../dataContexts/CustomerContext\";\r\nimport { OrdersContext } from \"../../../dataContexts/OrdersContext\";\r\nimport { ProductsContext } from \"../../../dataContexts/ProductsContext\";\r\nimport { StandingContext } from \"../../../dataContexts/StandingContext\";\r\nimport { HoldingContext } from \"../../../dataContexts/HoldingContext\";\r\n\r\nimport RouteList from \"./RouteList\";\r\nimport Info from \"./Info\";\r\nimport Buttons from \"./Buttons\";\r\n\r\nconst MainWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr 1fr;\r\n  height: 100vh;\r\n`;\r\n\r\nconst DescripWrapper = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-items: start;\r\n  align-content: flex-start;\r\n  width: 100%;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst GroupBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: flex-start;\r\n  border: 1px solid lightgrey;\r\n  width: 95%;\r\n  margin: 5px 10px;\r\n  padding: 5px 20px;\r\n`;\r\n\r\nfunction EditRoutes() {\r\n  const [selectedRoute, setSelectedRoute] = useState();\r\n  const [routes, setRoutes] = useState(null);\r\n\r\n  const { setCustLoaded } = useContext(CustomerContext);\r\n  const { setProdLoaded } = useContext(ProductsContext);\r\n  let { setHoldLoaded } = useContext(HoldingContext);\r\n  let { setOrdersLoaded } = useContext(OrdersContext);\r\n  let { setStandLoaded } = useContext(StandingContext);\r\n\r\n  useEffect(() => {\r\n    setCustLoaded(true);\r\n    setProdLoaded(true);\r\n    setHoldLoaded(true);\r\n    setOrdersLoaded(true);\r\n    setStandLoaded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MainWrapper>\r\n        <RouteList\r\n          selectedRoute={selectedRoute}\r\n          setSelectedRoute={setSelectedRoute}\r\n          routes={routes}\r\n          setRoutes={setRoutes}\r\n        />\r\n        {selectedRoute && (\r\n          <React.Fragment>\r\n            <DescripWrapper>\r\n              <GroupBox id=\"Info\">\r\n                <Info\r\n                  selectedRoute={selectedRoute}\r\n                  setSelectedRoute={setSelectedRoute}\r\n                  routes={routes}\r\n                  setRoutes={setRoutes}\r\n                />\r\n              </GroupBox>\r\n            </DescripWrapper>\r\n          </React.Fragment>\r\n        )}\r\n        <DescripWrapper>\r\n          <Buttons\r\n            selectedRoute={selectedRoute}\r\n            setSelectedRoute={setSelectedRoute}\r\n            routes={routes}\r\n            setRoutes={setRoutes}\r\n          />\r\n        </DescripWrapper>\r\n      </MainWrapper>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default EditRoutes;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editRoutes\\RouteList.js",["408"],"import React, { useEffect, useContext } from \"react\";\r\n\r\nimport { ToggleContext } from \"../../../dataContexts/ToggleContext\";\r\n\r\nimport { listRoutes } from \"../../../graphql/queries\";\r\n\r\nimport { API, graphqlOperation } from \"aws-amplify\";\r\n\r\nimport { sortAtoZDataByIndex } from \"../../../helpers/sortDataHelpers\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { ScrollPanel } from \"primereact/scrollpanel\";\r\n\r\nconst ListWrapper = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  margin: auto;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst RouteList = ({ selectedRoute, setSelectedRoute, routes, setRoutes }) => {\r\n  let { setIsLoading } = useContext(ToggleContext);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchRoutes();\r\n    setIsLoading(false);\r\n  }, [routes]);\r\n\r\n  const fetchRoutes = async () => {\r\n    try {\r\n      const routeData = await API.graphql(\r\n        graphqlOperation(listRoutes, {\r\n          limit: \"50\",\r\n        })\r\n      );\r\n      const routeList = routeData.data.listRoutes.items;\r\n      sortAtoZDataByIndex(routeList, \"routeStart\");\r\n      let noDelete = routeList.filter((route) => route[\"_deleted\"] !== true);\r\n\r\n      setRoutes(noDelete);\r\n    } catch (error) {\r\n      console.log(\"error on fetching Route List\", error);\r\n    }\r\n  };\r\n\r\n  const handleSelection = (e) => {\r\n    setSelectedRoute(e.value);\r\n  };\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <ScrollPanel style={{ width: \"100%\", height: \"100vh\" }}>\r\n        {routes && (\r\n          <DataTable\r\n            value={routes}\r\n            className=\"p-datatable-striped\"\r\n            selection={selectedRoute}\r\n            onSelectionChange={handleSelection}\r\n            selectionMode=\"single\"\r\n            dataKey=\"id\"\r\n          >\r\n            <Column\r\n              field=\"routeName\"\r\n              header=\"Routes\"\r\n              sortable\r\n              filter\r\n              filterPlaceholder=\"Search by name\"\r\n            ></Column>\r\n          </DataTable>\r\n        )}\r\n      </ScrollPanel>\r\n    </ListWrapper>\r\n  );\r\n};\r\n\r\nexport default RouteList;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editRoutes\\Info.js",["409","410"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { ToggleContext } from \"../../../dataContexts/ToggleContext\";\r\n\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { PickList } from \"primereact/picklist\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\nimport { Checkbox } from \"primereact/checkbox\";\r\n\r\nimport {\r\n  setValue,\r\n  fixValue,\r\n  setPickValue,\r\n  setDropDownValue,\r\n} from \"../../../helpers/formHelpers\";\r\n\r\nimport { listZones } from \"../../../graphql/queries\";\r\n\r\nimport { API, graphqlOperation } from \"aws-amplify\";\r\n\r\nimport { sortAtoZDataByIndex } from \"../../../helpers/sortDataHelpers\";\r\n\r\nconst clonedeep = require(\"lodash.clonedeep\");\r\n\r\nconst DuoWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  margin: 0 0 20px 0;\r\n`;\r\n\r\nconst WeekWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr;\r\n  margin: 0 0 30px 0;\r\n`;\r\n\r\nconst hubDepart = [{ RouteDepart: \"Prado\" }, { RouteDepart: \"Carlton\" }];\r\n\r\nconst hubArrive = [{ RouteArrive: \"Prado\" }, { RouteArrive: \"Carlton\" }];\r\n\r\nconst Info = ({ selectedRoute, setSelectedRoute, routes, setRoutes }) => {\r\n  let { setIsLoading } = useContext(ToggleContext);\r\n\r\n  const [source, setSource] = useState([]);\r\n  const [target, setTarget] = useState([]);\r\n\r\n  const fullZones = useRef();\r\n\r\n  const [days, setDays] = useState([]);\r\n\r\n  const onDayChange = (e) => {\r\n    let selectedDays = [...days];\r\n    if (e.checked) selectedDays.push(e.value);\r\n    else selectedDays.splice(selectedDays.indexOf(e.value), 1);\r\n\r\n    let itemToUpdate = clonedeep(selectedRoute);\r\n    itemToUpdate[\"RouteSched\"] = selectedDays;\r\n    setSelectedRoute(itemToUpdate);\r\n    setDays(selectedDays);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchZones();\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTarget(selectedRoute[\"RouteServe\"]);\r\n  }, [selectedRoute]);\r\n\r\n  useEffect(() => {\r\n    setDays(selectedRoute[\"RouteSched\"]);\r\n  }, [selectedRoute]);\r\n\r\n  useEffect(() => {\r\n    let parsedZones = [];\r\n    if (fullZones.current) {\r\n      parsedZones = fullZones.current.filter(\r\n        (full) => !selectedRoute[\"RouteServe\"].includes(full)\r\n      );\r\n    }\r\n    setSource(parsedZones);\r\n  }, [selectedRoute]);\r\n\r\n  const fetchZones = async () => {\r\n    try {\r\n      const zoneData = await API.graphql(\r\n        graphqlOperation(listZones, {\r\n          limit: \"50\",\r\n        })\r\n      );\r\n      const zoneList = zoneData.data.listZones.items;\r\n      sortAtoZDataByIndex(zoneList, \"zoneNum\");\r\n      let noDelete = zoneList.filter((zone) => zone[\"_deleted\"] !== true);\r\n      let mappedNoDelete = noDelete.map((item) => item[\"zoneName\"]);\r\n      fullZones.current = mappedNoDelete;\r\n      setSource(mappedNoDelete);\r\n    } catch (error) {\r\n      console.log(\"error on fetching Cust List\", error);\r\n    }\r\n  };\r\n\r\n  const itemTemplate = (item) => {\r\n    return <div>{item}</div>;\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setSource(event.source);\r\n    setSelectedRoute(setPickValue(event, selectedRoute));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2>\r\n        <i className=\"pi pi-map\"></i> Route Info\r\n      </h2>\r\n\r\n      <div className=\"p-inputgroup\">\r\n        <span className=\"p-inputgroup-addon\">\r\n          <label htmlFor=\"zoneName\"> Route Name</label>\r\n          <br />\r\n        </span>\r\n\r\n        <InputText\r\n          id=\"routeName\"\r\n          placeholder={selectedRoute.routeName}\r\n          disabled\r\n          onKeyUp={(e) =>\r\n            e.code === \"Enter\" && setSelectedRoute(setValue(e, selectedRoute))\r\n          }\r\n          onBlur={(e) => setSelectedRoute(fixValue(e, selectedRoute))}\r\n        />\r\n      </div>\r\n      <br />\r\n      <DuoWrapper>\r\n        <div className=\"p-inputgroup\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <label htmlFor=\"zoneName\"> Route Start Time (0-24)</label>\r\n          </span>\r\n\r\n          <InputText\r\n            id=\"routeStart\"\r\n            placeholder={selectedRoute.routeStart}\r\n            onKeyUp={(e) =>\r\n              e.code === \"Enter\" && setSelectedRoute(setValue(e, selectedRoute))\r\n            }\r\n            onBlur={(e) => setSelectedRoute(fixValue(e, selectedRoute))}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"p-inputgroup\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <label htmlFor=\"zoneName\"> Route Duration (in hours)</label>\r\n          </span>\r\n\r\n          <InputText\r\n            id=\"routeTime\"\r\n            placeholder={selectedRoute.routeTime}\r\n            onKeyUp={(e) =>\r\n              e.code === \"Enter\" && setSelectedRoute(setValue(e, selectedRoute))\r\n            }\r\n            onBlur={(e) => setSelectedRoute(fixValue(e, selectedRoute))}\r\n          />\r\n        </div>\r\n      </DuoWrapper>\r\n      <DuoWrapper>\r\n        <div className=\"p-inputgroup\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <label htmlFor=\"RouteDepart\">Depart Hub</label>\r\n          </span>\r\n          <Dropdown\r\n            id=\"RouteDepart\"\r\n            optionLabel=\"RouteDepart\"\r\n            options={hubDepart}\r\n            onChange={(e) =>\r\n              setSelectedRoute(setDropDownValue(e, selectedRoute))\r\n            }\r\n            placeholder={\r\n              selectedRoute ? selectedRoute.RouteDepart : \"Departure Hub\"\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"p-inputgroup\">\r\n          <span className=\"p-inputgroup-addon\">\r\n            <label htmlFor=\"RouteArrive\">Arrival Hub</label>\r\n          </span>\r\n          <Dropdown\r\n            id=\"RouteArrive\"\r\n            optionLabel=\"RouteArrive\"\r\n            options={hubArrive}\r\n            onChange={(e) =>\r\n              setSelectedRoute(setDropDownValue(e, selectedRoute))\r\n            }\r\n            placeholder={\r\n              selectedRoute ? selectedRoute.RouteArrive : \"Arrival Hub\"\r\n            }\r\n          />\r\n        </div>\r\n      </DuoWrapper>\r\n      <WeekWrapper>\r\n        <div className=\"p-col-12\">\r\n          <Checkbox\r\n            inputId=\"cb1\"\r\n            value=\"1\"\r\n            onChange={onDayChange}\r\n            checked={days.includes(\"1\")}\r\n          ></Checkbox>\r\n          <label htmlFor=\"cb1\" className=\"p-checkbox-label\">\r\n            Sun\r\n          </label>\r\n        </div>\r\n        <div className=\"p-col-12\">\r\n          <Checkbox\r\n            inputId=\"cb2\"\r\n            value=\"2\"\r\n            onChange={onDayChange}\r\n            checked={days.includes(\"2\")}\r\n          ></Checkbox>\r\n          <label htmlFor=\"cb2\" className=\"p-checkbox-label\">\r\n            Mon\r\n          </label>\r\n        </div>\r\n        <div className=\"p-col-12\">\r\n          <Checkbox\r\n            inputId=\"cb3\"\r\n            value=\"3\"\r\n            onChange={onDayChange}\r\n            checked={days.includes(\"3\")}\r\n          ></Checkbox>\r\n          <label htmlFor=\"cb3\" className=\"p-checkbox-label\">\r\n            Tues\r\n          </label>\r\n        </div>\r\n        <div className=\"p-col-12\">\r\n          <Checkbox\r\n            inputId=\"cb3\"\r\n            value=\"4\"\r\n            onChange={onDayChange}\r\n            checked={days.includes(\"4\")}\r\n          ></Checkbox>\r\n          <label htmlFor=\"cb3\" className=\"p-checkbox-label\">\r\n            Wed\r\n          </label>\r\n        </div>\r\n        <div className=\"p-col-12\">\r\n          <Checkbox\r\n            inputId=\"cb3\"\r\n            value=\"5\"\r\n            onChange={onDayChange}\r\n            checked={days.includes(\"5\")}\r\n          ></Checkbox>\r\n          <label htmlFor=\"cb3\" className=\"p-checkbox-label\">\r\n            Thurs\r\n          </label>\r\n        </div>\r\n        <div className=\"p-col-12\">\r\n          <Checkbox\r\n            inputId=\"cb3\"\r\n            value=\"6\"\r\n            onChange={onDayChange}\r\n            checked={days.includes(\"6\")}\r\n          ></Checkbox>\r\n          <label htmlFor=\"cb3\" className=\"p-checkbox-label\">\r\n            Fri\r\n          </label>\r\n        </div>\r\n        <div className=\"p-col-12\">\r\n          <Checkbox\r\n            inputId=\"cb3\"\r\n            value=\"7\"\r\n            onChange={onDayChange}\r\n            checked={days.includes(\"7\")}\r\n          ></Checkbox>\r\n          <label htmlFor=\"cb3\" className=\"p-checkbox-label\">\r\n            Sat\r\n          </label>\r\n        </div>\r\n      </WeekWrapper>\r\n      <PickList\r\n        sourceHeader=\"All Zones\"\r\n        targetHeader=\"Served By This Route\"\r\n        source={source}\r\n        target={selectedRoute[\"RouteServe\"]}\r\n        itemTemplate={itemTemplate}\r\n        onChange={onChange}\r\n        sourceStyle={{ height: \"250px\" }}\r\n        targetStyle={{ height: \"250px\" }}\r\n      ></PickList>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editRoutes\\Buttons.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editZones\\editZones.js",["411"],"import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { CustomerContext } from \"../../../dataContexts/CustomerContext\";\r\nimport { OrdersContext } from \"../../../dataContexts/OrdersContext\";\r\nimport { ProductsContext } from \"../../../dataContexts/ProductsContext\";\r\nimport { StandingContext } from \"../../../dataContexts/StandingContext\";\r\nimport { HoldingContext } from \"../../../dataContexts/HoldingContext\";\r\n\r\nimport ZoneList from \"./ZoneList\";\r\nimport Info from \"./Info\";\r\nimport Buttons from \"./Buttons\";\r\n\r\nconst MainWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 0.5fr;\r\n  height: 100vh;\r\n`;\r\n\r\nconst DescripWrapper = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-items: start;\r\n  align-content: flex-start;\r\n  width: 100%;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst GroupBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: flex-start;\r\n  border: 1px solid lightgrey;\r\n  width: 95%;\r\n  margin: 5px 10px;\r\n  padding: 5px 20px;\r\n`;\r\n\r\nfunction EditZones() {\r\n  const [selectedZone, setSelectedZone] = useState(1);\r\n  const [zones, setZones] = useState(null);\r\n\r\n  const { setCustLoaded } = useContext(CustomerContext);\r\n  const { setProdLoaded } = useContext(ProductsContext);\r\n  let { setHoldLoaded } = useContext(HoldingContext);\r\n  let { setOrdersLoaded } = useContext(OrdersContext);\r\n  let { setStandLoaded } = useContext(StandingContext);\r\n\r\n  useEffect(() => {\r\n    setCustLoaded(true);\r\n    setProdLoaded(true);\r\n    setHoldLoaded(true);\r\n    setOrdersLoaded(true);\r\n    setStandLoaded(true);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MainWrapper>\r\n        <ZoneList\r\n          selectedZone={selectedZone}\r\n          setSelectedZone={setSelectedZone}\r\n          zones={zones}\r\n          setZones={setZones}\r\n        />\r\n        {selectedZone && (\r\n          <React.Fragment>\r\n            <DescripWrapper>\r\n              <GroupBox id=\"Info\">\r\n                <Info\r\n                  selectedZone={selectedZone}\r\n                  setSelectedZone={setSelectedZone}\r\n                  zones={zones}\r\n                  setZones={setZones}\r\n                />\r\n              </GroupBox>\r\n            </DescripWrapper>\r\n          </React.Fragment>\r\n        )}\r\n        <DescripWrapper>\r\n          <Buttons\r\n            selectedZone={selectedZone}\r\n            setSelectedZone={setSelectedZone}\r\n            zones={zones}\r\n            setZones={setZones}\r\n          />\r\n        </DescripWrapper>\r\n      </MainWrapper>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default EditZones;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editZones\\ZoneList.js",["412"],"import React, { useEffect, useContext } from \"react\";\r\n\r\nimport { ToggleContext } from \"../../../dataContexts/ToggleContext\";\r\n\r\nimport { listZones } from \"../../../graphql/queries\";\r\n\r\nimport { API, graphqlOperation } from \"aws-amplify\";\r\n\r\nimport { sortAtoZDataByIndex } from \"../../../helpers/sortDataHelpers\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { DataTable } from \"primereact/datatable\";\r\nimport { Column } from \"primereact/column\";\r\nimport { ScrollPanel } from \"primereact/scrollpanel\";\r\n\r\nconst ListWrapper = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  margin: auto;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst ZoneList = ({ selectedZone, setSelectedZone, zones, setZones }) => {\r\n  let { setIsLoading } = useContext(ToggleContext);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchZones();\r\n    setIsLoading(false);\r\n  }, [zones]);\r\n\r\n  const fetchZones = async () => {\r\n    try {\r\n      const zoneData = await API.graphql(\r\n        graphqlOperation(listZones, {\r\n          limit: \"50\",\r\n        })\r\n      );\r\n      const zoneList = zoneData.data.listZones.items;\r\n      sortAtoZDataByIndex(zoneList, \"zoneNum\");\r\n      let noDelete = zoneList.filter((zone) => zone[\"_deleted\"] !== true);\r\n\r\n      setZones(noDelete);\r\n    } catch (error) {\r\n      console.log(\"error on fetching Cust List\", error);\r\n    }\r\n  };\r\n\r\n  const handleSelection = (e) => {\r\n    setSelectedZone(e.value);\r\n  };\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <ScrollPanel style={{ width: \"100%\", height: \"100vh\" }}>\r\n        {zones && (\r\n          <DataTable\r\n            value={zones}\r\n            className=\"p-datatable-striped\"\r\n            selection={selectedZone}\r\n            onSelectionChange={handleSelection}\r\n            selectionMode=\"single\"\r\n            dataKey=\"id\"\r\n          >\r\n            <Column\r\n              field=\"zoneName\"\r\n              header=\"Zones\"\r\n              sortable\r\n              filter\r\n              filterPlaceholder=\"Search by name\"\r\n            ></Column>\r\n          </DataTable>\r\n        )}\r\n      </ScrollPanel>\r\n    </ListWrapper>\r\n  );\r\n};\r\n\r\nexport default ZoneList;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editZones\\Buttons.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\settings\\editZones\\Info.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Description.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\ProductList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Baking.js",["413"],"import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { ProductsContext } from \"../../../dataContexts/ProductsContext\";\r\n\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { Dropdown } from \"primereact/dropdown\";\r\n\r\n\r\nimport {\r\n  setValue,\r\n  fixValue,\r\n  setDropDownValue,\r\n  \r\n} from \"../../../helpers/formHelpers\";\r\n\r\nconst doughTypes = [\r\n  { doughType: \"Baguette\" },\r\n  { doughType: \"Brioche\" },\r\n  { doughType: \"French\" },\r\n  { doughType: \"Focaccia\" },\r\n  { doughType: \"Whole Wheat\" },\r\n  { doughType: \"Croissant\" },\r\n  { doughType: \"Rustic Rye\" },\r\n  { doughType: \"Levain\" },\r\n  { doughType: \"Multigrain\" },\r\n];\r\n\r\nconst bakedWheres = [\r\n  { bakedWhere: \"Prado\" },\r\n  { bakedWhere: \"Carlton\" },\r\n  { bakedWhere: \"Mixed\" },\r\n];\r\n\r\nconst Baking = ({ selectedProduct, setSelectedProduct }) => {\r\n  const { products } = useContext(ProductsContext);\r\n\r\n  const [ fullProducts, setFullProducts ] = useState([])\r\n\r\n  useEffect(() => {\r\n    let stageProducts = products.map(prod => ({depends: prod[\"prodName\"]}))\r\n    stageProducts.push({depends: \"NONE\"})\r\n    \r\n    setFullProducts(stageProducts)\r\n  },[])\r\n  \r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h2>\r\n        <i className=\"pi pi-user\"></i> Packing Info\r\n      </h2>\r\n      <div className=\"p-inputgroup\">\r\n        <span className=\"p-inputgroup-addon\">\r\n          <label htmlFor=\"doughType\">Dough Type</label>\r\n        </span>\r\n        <Dropdown\r\n          id=\"doughType\"\r\n          optionLabel=\"doughType\"\r\n          options={doughTypes}\r\n          onChange={(e) =>\r\n            setSelectedProduct(setDropDownValue(e, selectedProduct))\r\n          }\r\n          placeholder={\r\n            selectedProduct ? selectedProduct.doughType : \"Select Dough Type\"\r\n          }\r\n        />\r\n      </div>\r\n      <br />\r\n\r\n      <div className=\"p-inputgroup\">\r\n        <span className=\"p-inputgroup-addon\">\r\n          <label htmlFor=\"bakedWhere\">Baked Where</label>\r\n        </span>\r\n        <Dropdown\r\n          id=\"bakedWhere\"\r\n          optionLabel=\"bakedWhere\"\r\n          options={bakedWheres}\r\n          onChange={(e) =>\r\n            setSelectedProduct(setDropDownValue(e, selectedProduct))\r\n          }\r\n          placeholder={\r\n            selectedProduct ? selectedProduct.bakedWhere : \"Baked Where\"\r\n          }\r\n        />\r\n      </div>\r\n      <br />\r\n\r\n      <div className=\"p-inputgroup\">\r\n        <span className=\"p-inputgroup-addon\">\r\n          <label htmlFor=\"readyTime\">Guaranteed Ready (0-24)</label>\r\n          <br />\r\n        </span>\r\n\r\n        <InputText\r\n          id=\"readyTime\"\r\n          placeholder={selectedProduct.readyTime}\r\n          onKeyUp={(e) =>\r\n            e.code === \"Enter\" &&\r\n            setSelectedProduct(setValue(e, selectedProduct))\r\n          }\r\n          onBlur={(e) => setSelectedProduct(fixValue(e, selectedProduct))}\r\n        />\r\n      </div>\r\n      <br />\r\n\r\n      <div className=\"p-inputgroup\">\r\n        <span className=\"p-inputgroup-addon\">\r\n          <label htmlFor=\"weight\">Dough Weight (lbs.)</label>\r\n          <br />\r\n        </span>\r\n\r\n        <InputText\r\n          id=\"weight\"\r\n          placeholder={selectedProduct.weight}\r\n          onKeyUp={(e) =>\r\n            e.code === \"Enter\" &&\r\n            setSelectedProduct(setValue(e, selectedProduct))\r\n          }\r\n          onBlur={(e) => setSelectedProduct(fixValue(e, selectedProduct))}\r\n        />\r\n      </div>\r\n      <br />\r\n\r\n      <div className=\"p-inputgroup\">\r\n        <span className=\"p-inputgroup-addon\">\r\n          <label htmlFor=\"depends\">Dependant Product</label>\r\n        </span>\r\n        <Dropdown\r\n          id=\"depends\"\r\n          optionLabel=\"depends\"\r\n          options={fullProducts}\r\n          onChange={(e) =>\r\n            setSelectedProduct(setDropDownValue(e, selectedProduct))\r\n          }\r\n          placeholder={\r\n            selectedProduct ? selectedProduct.depends : \"Depends On\"\r\n          }\r\n        />\r\n      </div>\r\n      <br />\r\n      </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Baking;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Billing.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Packing.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Buttons.js",["414"],"import React, { useContext } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport swal from \"@sweetalert/with-react\";\r\nimport \"primereact/resources/themes/saga-blue/theme.css\";\r\n\r\nimport { ProductsContext } from \"../../../dataContexts/ProductsContext\";\r\n\r\nimport {\r\n  updateProduct,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../../../graphql/mutations\";\r\n\r\nimport { Button } from \"primereact/button\";\r\n\r\nimport { API, graphqlOperation } from \"aws-amplify\";\r\n\r\nconst ButtonBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-content: flex-start;\r\n  width: 80%;\r\n  margin: 5px 10px;\r\n  padding: 5px 20px;\r\n`;\r\n\r\nconst Buttons = ({ selectedProduct, setSelectedProduct }) => {\r\n  const { setProdLoaded } = useContext(ProductsContext);\r\n\r\n  const handleAddProd = () => {\r\n    let prodName;\r\n    let nickName;\r\n\r\n    swal(\"Enter Product Name:\", {\r\n      content: \"input\",\r\n    }).then((value) => {\r\n      prodName = value;\r\n      swal(`Enter Nickname for ${value}:`, {\r\n        content: \"input\",\r\n      }).then((value) => {\r\n        nickName = value;\r\n        const addDetails = {\r\n          prodName: prodName,\r\n          nickName: nickName,\r\n          packGroup: \"\",\r\n          packSize: 0,\r\n          doughType: \"\",\r\n          freezerThaw: false,\r\n          packGroupOrder: 0,\r\n          readyTime: 15,\r\n          bakedWhere: [\"\"],\r\n          wholePrice: 0,\r\n          retailPrice: 0,\r\n          isWhole: false,\r\n          depends: [\"\"],\r\n          weight: 0,\r\n          descrip: \"description\",\r\n          picURL: \"\",\r\n          squareID: \"\"\r\n        };\r\n        createProd(addDetails, nickName, prodName);\r\n      });\r\n    });\r\n  };\r\n\r\n  const createProd = async (addDetails, nickName, prodName) => {\r\n    try {\r\n      const prodData = await API.graphql(\r\n        graphqlOperation(createProduct, { input: { ...addDetails } })\r\n      );\r\n      let id = prodData.data.createProduct.id;\r\n      let version = prodData.data.createProduct.version;\r\n\r\n      const fullDetails = {\r\n        id: id,\r\n        _version: version,\r\n        prodName: prodName,\r\n        nickName: nickName,\r\n        packGroup: \"\",\r\n        packSize: 0,\r\n        doughType: \"\",\r\n        freezerThaw: false,\r\n        packGroupOrder: 0,\r\n        readyTime: 15,\r\n        bakedWhere: [\"\"],\r\n        wholePrice: 0,\r\n        retailPrice: 0,\r\n        isWhole: false,\r\n        depends: [\"\"],\r\n        weight: 0,\r\n        descrip: \"description\",\r\n        picURL: \"\",\r\n        squareID: \"\"\r\n      };\r\n\r\n      setProdLoaded(false);\r\n    } catch (error) {\r\n      console.log(\"error on fetching Cust List\", error);\r\n    }\r\n  };\r\n\r\n  const updateProd = async () => {\r\n    const updateDetails = {\r\n        id: selectedProduct[\"id\"],\r\n        _version: selectedProduct[\"_version\"],\r\n        prodName: selectedProduct[\"prodName\"],\r\n        nickName: selectedProduct[\"nickName\"],\r\n        packGroup: selectedProduct[\"packGroup\"],\r\n        packSize: selectedProduct[\"packSize\"],\r\n        doughType: selectedProduct[\"doughType\"],\r\n        freezerThaw: selectedProduct[\"freezerThaw\"],\r\n        packGroupOrder: selectedProduct[\"packGroupOrder\"],\r\n        readyTime: selectedProduct[\"readyTime\"],\r\n        bakedWhere: selectedProduct[\"bakedWhere\"],\r\n        wholePrice: selectedProduct[\"wholePrice\"],\r\n        retailPrice: selectedProduct[\"retailPrice\"],\r\n        isWhole: selectedProduct[\"isWhole\"],\r\n        depends: selectedProduct[\"depends\"],\r\n        weight: selectedProduct[\"weight\"],\r\n        descrip: selectedProduct[\"descrip\"],\r\n        picURL: selectedProduct[\"picURL\"],\r\n        squareID: selectedProduct[\"squareID\"]\r\n    };\r\n\r\n    try {\r\n      const prodData = await API.graphql(\r\n        graphqlOperation(updateProduct, { input: { ...updateDetails } })\r\n      );\r\n\r\n      swal({\r\n        text: `${prodData.data.updateProduct.prodName} has been updated.`,\r\n        icon: \"success\",\r\n        buttons: false,\r\n        timer: 2000,\r\n      });\r\n      setProdLoaded(false);\r\n    } catch (error) {\r\n      console.log(\"error on fetching Prod List\", error);\r\n    }\r\n  };\r\n\r\n  const deleteProdWarn = async () => {\r\n    swal({\r\n      text:\r\n        \" Are you sure that you would like to permanently delete this product?\",\r\n      icon: \"warning\",\r\n      buttons: [\"Yes\", \"Don't do it!\"],\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (!willDelete) {\r\n        deleteProd();\r\n      } else {\r\n        return;\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteProd = async () => {\r\n    const deleteDetails = {\r\n      id: selectedProduct[\"id\"],\r\n      _version: selectedProduct[\"_version\"]\r\n    };\r\n    \r\n    try {\r\n      await API.graphql(\r\n        graphqlOperation(deleteProduct, { input: { ...deleteDetails } })\r\n      );\r\n      setProdLoaded(false);\r\n      setSelectedProduct();\r\n    } catch (error) {\r\n      console.log(\"error on fetching Prod List\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ButtonBox>\r\n      <Button\r\n        label=\"Add a Product\"\r\n        icon=\"pi pi-plus\"\r\n        onClick={handleAddProd}\r\n        className={\"p-button-raised p-button-rounded\"}\r\n      />\r\n      <br />\r\n      {selectedProduct && (\r\n        <React.Fragment>\r\n          <Button\r\n            label=\"Update Product\"\r\n            icon=\"pi pi-user-edit\"\r\n            onClick={updateProd}\r\n            className={\"p-button-raised p-button-rounded p-button-success\"}\r\n          />\r\n          <br />\r\n        </React.Fragment>\r\n      )}\r\n      {selectedProduct && (\r\n        <React.Fragment>\r\n          <Button\r\n            label=\"Delete Product\"\r\n            icon=\"pi pi-user-minus\"\r\n            onClick={deleteProdWarn}\r\n            className={\"p-button-raised p-button-rounded p-button-warning\"}\r\n          />\r\n          <br />\r\n          <br />\r\n        </React.Fragment>\r\n      )}\r\n    </ButtonBox>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\products\\Parts\\Name.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByRoute\\ByRoute.js",["415"],"import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { CustomerContext, CustomerLoad } from \"../../../dataContexts/CustomerContext\";\r\nimport { ProductsContext, ProductsLoad } from \"../../../dataContexts/ProductsContext\";\r\nimport { OrdersContext, OrdersLoad } from \"../../../dataContexts/OrdersContext\";\r\nimport { StandingContext, StandingLoad } from \"../../../dataContexts/StandingContext\";\r\nimport { HoldingContext } from \"../../../dataContexts/HoldingContext\";\r\n\r\n\r\nimport RouteGrid from \"../ByRoute/Parts/RouteGrid\";\r\nimport RouteList from \"../ByRoute/Parts/RouteList\";\r\nimport ToolBar from \"../ByRoute/Parts/ToolBar\";\r\n\r\nconst MainWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 5fr;\r\n  height: 100vh;\r\n`;\r\n\r\nconst DescripWrapper = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  display: flex;\r\n  margin: 0px 10px;\r\n  padding: 0px 10px;\r\n  flex-direction: column;\r\n  justify-items: start;\r\n  align-content: flex-start;\r\n  width: 100%;\r\n  background: #ffffff;\r\n`;\r\n\r\nfunction ByRoute() {\r\n  const [routes, setRoutes] = useState(null);\r\n\r\n  const { custLoaded, setCustLoaded } = useContext(CustomerContext);\r\n  const { prodLoaded, setProdLoaded } = useContext(ProductsContext);\r\n  let { setHoldLoaded } = useContext(HoldingContext);\r\n  let { ordersLoaded, setOrdersLoaded } = useContext(OrdersContext);\r\n  let { standLoaded, setStandLoaded } = useContext(StandingContext);\r\n\r\n  useEffect(() => {\r\n    setCustLoaded(false);\r\n    setProdLoaded(false);\r\n    setHoldLoaded(true);\r\n    setOrdersLoaded(false);\r\n    setStandLoaded(false);\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      {!ordersLoaded ? <OrdersLoad /> : \"\"}\r\n      {!custLoaded ? <CustomerLoad /> : \"\"}\r\n      {!prodLoaded ? <ProductsLoad /> : \"\"}\r\n      {!standLoaded ? <StandingLoad /> : \"\"}\r\n\r\n      <MainWrapper>\r\n        <RouteList routes={routes} setRoutes={setRoutes} />\r\n        <DescripWrapper>\r\n          <ToolBar />\r\n          <RouteGrid routes={routes} setRoutes={setRoutes} />\r\n        </DescripWrapper>\r\n      </MainWrapper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ByRoute;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByRoute\\Parts\\RouteGrid.js",["416"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByRoute\\Parts\\RouteList.js",["417","418","419"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\logistics\\ByRoute\\Parts\\ToolBar.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\delivGridHelpers.js",[],{"ruleId":"420","replacedBy":"421"},{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","severity":1,"message":"425","line":38,"column":7,"nodeType":"426","endLine":38,"endColumn":9,"suggestions":"427"},{"ruleId":"428","severity":1,"message":"429","line":3,"column":10,"nodeType":"430","messageId":"431","endLine":3,"endColumn":26},{"ruleId":"428","severity":1,"message":"432","line":5,"column":31,"nodeType":"430","messageId":"431","endLine":5,"endColumn":50},{"ruleId":"424","severity":1,"message":"433","line":47,"column":7,"nodeType":"426","endLine":47,"endColumn":9,"suggestions":"434"},{"ruleId":"424","severity":1,"message":"435","line":38,"column":9,"nodeType":"426","endLine":38,"endColumn":11,"suggestions":"436"},{"ruleId":"428","severity":1,"message":"437","line":3,"column":10,"nodeType":"430","messageId":"431","endLine":3,"endColumn":29},{"ruleId":"428","severity":1,"message":"438","line":34,"column":26,"nodeType":"430","messageId":"431","endLine":34,"endColumn":45},{"ruleId":"424","severity":1,"message":"439","line":38,"column":7,"nodeType":"426","endLine":38,"endColumn":9,"suggestions":"440"},{"ruleId":"428","severity":1,"message":"437","line":3,"column":10,"nodeType":"430","messageId":"431","endLine":3,"endColumn":29},{"ruleId":"428","severity":1,"message":"441","line":36,"column":25,"nodeType":"430","messageId":"431","endLine":36,"endColumn":43},{"ruleId":"424","severity":1,"message":"442","line":40,"column":7,"nodeType":"426","endLine":40,"endColumn":9,"suggestions":"443"},{"ruleId":"428","severity":1,"message":"444","line":8,"column":8,"nodeType":"430","messageId":"431","endLine":8,"endColumn":25},{"ruleId":"420","replacedBy":"445"},{"ruleId":"422","replacedBy":"446"},{"ruleId":"424","severity":1,"message":"447","line":48,"column":6,"nodeType":"426","endLine":48,"endColumn":43,"suggestions":"448"},{"ruleId":"424","severity":1,"message":"449","line":69,"column":6,"nodeType":"426","endLine":69,"endColumn":58,"suggestions":"450"},{"ruleId":"424","severity":1,"message":"451","line":61,"column":6,"nodeType":"426","endLine":61,"endColumn":24,"suggestions":"452"},{"ruleId":"420","replacedBy":"453"},{"ruleId":"422","replacedBy":"454"},{"ruleId":"424","severity":1,"message":"455","line":52,"column":7,"nodeType":"426","endLine":52,"endColumn":70,"suggestions":"456"},{"ruleId":"420","replacedBy":"457"},{"ruleId":"422","replacedBy":"458"},{"ruleId":"428","severity":1,"message":"459","line":8,"column":10,"nodeType":"430","messageId":"431","endLine":8,"endColumn":25},{"ruleId":"428","severity":1,"message":"460","line":12,"column":10,"nodeType":"430","messageId":"431","endLine":12,"endColumn":29},{"ruleId":"424","severity":1,"message":"461","line":83,"column":7,"nodeType":"426","endLine":83,"endColumn":25,"suggestions":"462"},{"ruleId":"424","severity":1,"message":"463","line":87,"column":7,"nodeType":"426","endLine":87,"endColumn":9,"suggestions":"464"},{"ruleId":"428","severity":1,"message":"459","line":8,"column":10,"nodeType":"430","messageId":"431","endLine":8,"endColumn":25},{"ruleId":"428","severity":1,"message":"460","line":12,"column":10,"nodeType":"430","messageId":"431","endLine":12,"endColumn":29},{"ruleId":"428","severity":1,"message":"465","line":61,"column":35,"nodeType":"430","messageId":"431","endLine":61,"endColumn":50},{"ruleId":"424","severity":1,"message":"461","line":84,"column":7,"nodeType":"426","endLine":84,"endColumn":25,"suggestions":"466"},{"ruleId":"424","severity":1,"message":"463","line":89,"column":7,"nodeType":"426","endLine":89,"endColumn":9,"suggestions":"467"},{"ruleId":"428","severity":1,"message":"468","line":8,"column":10,"nodeType":"430","messageId":"431","endLine":8,"endColumn":24},{"ruleId":"424","severity":1,"message":"469","line":36,"column":7,"nodeType":"426","endLine":36,"endColumn":9,"suggestions":"470"},{"ruleId":"424","severity":1,"message":"471","line":42,"column":7,"nodeType":"426","endLine":42,"endColumn":9,"suggestions":"472"},{"ruleId":"424","severity":1,"message":"473","line":48,"column":7,"nodeType":"426","endLine":48,"endColumn":9,"suggestions":"474"},{"ruleId":"424","severity":1,"message":"475","line":54,"column":7,"nodeType":"426","endLine":54,"endColumn":9,"suggestions":"476"},{"ruleId":"428","severity":1,"message":"477","line":11,"column":8,"nodeType":"430","messageId":"431","endLine":11,"endColumn":26},{"ruleId":"424","severity":1,"message":"478","line":109,"column":7,"nodeType":"426","endLine":109,"endColumn":25,"suggestions":"479"},{"ruleId":"424","severity":1,"message":"480","line":77,"column":6,"nodeType":"426","endLine":77,"endColumn":8,"suggestions":"481"},{"ruleId":"428","severity":1,"message":"482","line":73,"column":5,"nodeType":"430","messageId":"431","endLine":73,"endColumn":17},{"ruleId":"428","severity":1,"message":"483","line":75,"column":5,"nodeType":"430","messageId":"431","endLine":75,"endColumn":21},{"ruleId":"428","severity":1,"message":"484","line":81,"column":11,"nodeType":"430","messageId":"431","endLine":81,"endColumn":19},{"ruleId":"428","severity":1,"message":"485","line":82,"column":11,"nodeType":"430","messageId":"431","endLine":82,"endColumn":18},{"ruleId":"428","severity":1,"message":"486","line":93,"column":5,"nodeType":"430","messageId":"431","endLine":93,"endColumn":20},{"ruleId":"424","severity":1,"message":"487","line":147,"column":6,"nodeType":"426","endLine":147,"endColumn":25,"suggestions":"488"},{"ruleId":"424","severity":1,"message":"489","line":162,"column":6,"nodeType":"426","endLine":162,"endColumn":25,"suggestions":"490"},{"ruleId":"428","severity":1,"message":"491","line":42,"column":5,"nodeType":"430","messageId":"431","endLine":42,"endColumn":18},{"ruleId":"428","severity":1,"message":"492","line":45,"column":5,"nodeType":"430","messageId":"431","endLine":45,"endColumn":11},{"ruleId":"428","severity":1,"message":"493","line":46,"column":5,"nodeType":"430","messageId":"431","endLine":46,"endColumn":14},{"ruleId":"428","severity":1,"message":"494","line":48,"column":5,"nodeType":"430","messageId":"431","endLine":48,"endColumn":17},{"ruleId":"428","severity":1,"message":"495","line":49,"column":5,"nodeType":"430","messageId":"431","endLine":49,"endColumn":20},{"ruleId":"428","severity":1,"message":"484","line":51,"column":11,"nodeType":"430","messageId":"431","endLine":51,"endColumn":19},{"ruleId":"428","severity":1,"message":"485","line":52,"column":11,"nodeType":"430","messageId":"431","endLine":52,"endColumn":18},{"ruleId":"424","severity":1,"message":"496","line":55,"column":6,"nodeType":"426","endLine":55,"endColumn":25,"suggestions":"497"},{"ruleId":"424","severity":1,"message":"498","line":64,"column":6,"nodeType":"426","endLine":64,"endColumn":8,"suggestions":"499"},{"ruleId":"424","severity":1,"message":"500","line":65,"column":6,"nodeType":"426","endLine":65,"endColumn":8,"suggestions":"501"},{"ruleId":"424","severity":1,"message":"502","line":57,"column":6,"nodeType":"426","endLine":57,"endColumn":8,"suggestions":"503"},{"ruleId":"424","severity":1,"message":"504","line":32,"column":6,"nodeType":"426","endLine":32,"endColumn":14,"suggestions":"505"},{"ruleId":"428","severity":1,"message":"506","line":47,"column":10,"nodeType":"430","messageId":"431","endLine":47,"endColumn":16},{"ruleId":"424","severity":1,"message":"455","line":68,"column":6,"nodeType":"426","endLine":68,"endColumn":8,"suggestions":"507"},{"ruleId":"424","severity":1,"message":"502","line":57,"column":6,"nodeType":"426","endLine":57,"endColumn":8,"suggestions":"508"},{"ruleId":"424","severity":1,"message":"509","line":32,"column":6,"nodeType":"426","endLine":32,"endColumn":13,"suggestions":"510"},{"ruleId":"424","severity":1,"message":"511","line":44,"column":5,"nodeType":"426","endLine":44,"endColumn":7,"suggestions":"512"},{"ruleId":"428","severity":1,"message":"513","line":75,"column":13,"nodeType":"430","messageId":"431","endLine":75,"endColumn":24},{"ruleId":"424","severity":1,"message":"502","line":49,"column":6,"nodeType":"426","endLine":49,"endColumn":8,"suggestions":"514"},{"ruleId":"424","severity":1,"message":"478","line":89,"column":6,"nodeType":"426","endLine":89,"endColumn":24,"suggestions":"515"},{"ruleId":"428","severity":1,"message":"516","line":28,"column":11,"nodeType":"430","messageId":"431","endLine":28,"endColumn":20},{"ruleId":"428","severity":1,"message":"517","line":28,"column":22,"nodeType":"430","messageId":"431","endLine":28,"endColumn":27},{"ruleId":"424","severity":1,"message":"504","line":34,"column":6,"nodeType":"426","endLine":34,"endColumn":14,"suggestions":"518"},"no-native-reassign",["519"],"no-negated-in-lhs",["520"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCustomers'. Either include it or remove the dependency array.","ArrayExpression",["521"],"no-unused-vars","'FilterOrdersDups' is defined but never used.","Identifier","unusedVar","'sortZtoADataByIndex' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchOrders'. Either include it or remove the dependency array.",["522"],"React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.",["523"],"'FilterStandHoldDups' is defined but never used.","'setOriginalStanding' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchStanding'. Either include it or remove the dependency array.",["524"],"'setOriginalHolding' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchHolding'. Either include it or remove the dependency array.",["525"],"'DeliveryRouteGrid' is defined but never used.",["519"],["520"],"React Hook useEffect has a missing dependency: 'currentCartList'. Either include it or remove the dependency array.",["526"],"React Hook useEffect has a missing dependency: 'setCurrentCartList'. Either include it or remove the dependency array.",["527"],"React Hook useEffect has missing dependencies: 'setStandArray' and 'setStandList'. Either include them or remove the dependency array.",["528"],["519"],["520"],"React Hook useEffect has a missing dependency: 'setIsLoading'. Either include it or remove the dependency array.",["529"],["519"],["520"],"'ProductsContext' is defined but never used.","'sortAtoZDataByIndex' is defined but never used.","React Hook useEffect has a missing dependency: 'constructData'. Either include it or remove the dependency array.",["530"],"React Hook useEffect has a missing dependency: 'setRoute'. Either include it or remove the dependency array.",["531"],"'listOfCustomers' is assigned a value but never used.",["532"],["533"],"'HoldingContext' is defined but never used.","React Hook useEffect has missing dependencies: 'orders.length' and 'setOrdersLoaded'. Either include them or remove the dependency array.",["534"],"React Hook useEffect has missing dependencies: 'customers.length' and 'setCustLoaded'. Either include them or remove the dependency array.",["535"],"React Hook useEffect has missing dependencies: 'products.length' and 'setProdLoaded'. Either include them or remove the dependency array.",["536"],"React Hook useEffect has missing dependencies: 'setStandLoaded' and 'standing.length'. Either include them or remove the dependency array.",["537"],"'LogisticsFunctions' is defined but never used.","React Hook useEffect has missing dependencies: 'constructColumns' and 'constructData'. Either include them or remove the dependency array.",["538"],"React Hook useEffect has missing dependencies: 'props.location.search', 'setCartList', and 'setChosen'. Either include them or remove the dependency array.",["539"],"'setStandList' is assigned a value but never used.","'setModifications' is assigned a value but never used.","'standing' is assigned a value but never used.","'holding' is assigned a value but never used.","'currentCartList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'customerGroup', 'orders', and 'setRoute'. Either include them or remove the dependency array.",["540"],"React Hook useEffect has missing dependencies: 'orders' and 'setPonote'. Either include them or remove the dependency array.",["541"],"'setStandArray' is assigned a value but never used.","'orders' is assigned a value but never used.","'setOrders' is assigned a value but never used.","'recentOrders' is assigned a value but never used.","'setRecentOrders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'orders', 'setCalendarEvents', and 'standing'. Either include them or remove the dependency array.",["542"],"React Hook useEffect has missing dependencies: 'customers', 'setCustLoaded', 'setHoldLoaded', 'setOrdersLoaded', 'setProdLoaded', and 'setStandLoaded'. Either include them or remove the dependency array.",["543"],"React Hook useEffect has missing dependencies: 'products', 'setCustLoaded', 'setHoldLoaded', 'setOrdersLoaded', 'setProdLoaded', and 'setStandLoaded'. Either include them or remove the dependency array.",["544"],"React Hook useEffect has missing dependencies: 'setCustLoaded', 'setHoldLoaded', 'setOrdersLoaded', 'setProdLoaded', and 'setStandLoaded'. Either include them or remove the dependency array.",["545"],"React Hook useEffect has missing dependencies: 'fetchRoutes' and 'setIsLoading'. Either include them or remove the dependency array.",["546"],"'target' is assigned a value but never used.",["547"],["548"],"React Hook useEffect has missing dependencies: 'fetchZones' and 'setIsLoading'. Either include them or remove the dependency array.",["549"],"React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["550"],"'fullDetails' is assigned a value but never used.",["551"],["552"],"'delivDate' is assigned a value but never used.","'route' is assigned a value but never used.",["553"],"no-global-assign","no-unsafe-negation",{"desc":"554","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"572","fix":"576"},{"desc":"574","fix":"577"},{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"600","fix":"601"},{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"600","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"600","fix":"611"},{"desc":"586","fix":"612"},{"desc":"602","fix":"613"},"Update the dependencies array to be: [fetchCustomers]",{"range":"614","text":"615"},"Update the dependencies array to be: [fetchOrders]",{"range":"616","text":"617"},"Update the dependencies array to be: [fetchProducts]",{"range":"618","text":"619"},"Update the dependencies array to be: [fetchStanding]",{"range":"620","text":"621"},"Update the dependencies array to be: [fetchHolding]",{"range":"622","text":"623"},"Update the dependencies array to be: [products, orders, chosen, delivDate, currentCartList]",{"range":"624","text":"625"},"Update the dependencies array to be: [chosen, delivDate, orders, standing, route, ponote, setCurrentCartList]",{"range":"626","text":"627"},"Update the dependencies array to be: [chosen, setStandArray, setStandList, standing]",{"range":"628","text":"629"},"Update the dependencies array to be: [custLoaded, holdLoaded, ordersLoaded, prodLoaded, setIsLoading, standLoaded]",{"range":"630","text":"631"},"Update the dependencies array to be: [constructData, delivDate, route]",{"range":"632","text":"633"},"Update the dependencies array to be: [setRoute]",{"range":"634","text":"635"},{"range":"636","text":"633"},{"range":"637","text":"635"},"Update the dependencies array to be: [orders.length, setOrdersLoaded]",{"range":"638","text":"639"},"Update the dependencies array to be: [customers.length, setCustLoaded]",{"range":"640","text":"641"},"Update the dependencies array to be: [products.length, setProdLoaded]",{"range":"642","text":"643"},"Update the dependencies array to be: [setStandLoaded, standing.length]",{"range":"644","text":"645"},"Update the dependencies array to be: [constructColumns, constructData, delivDate, route]",{"range":"646","text":"647"},"Update the dependencies array to be: [props.location.search, setCartList, setChosen]",{"range":"648","text":"649"},"Update the dependencies array to be: [chosen, customerGroup, delivDate, orders, setRoute]",{"range":"650","text":"651"},"Update the dependencies array to be: [chosen, delivDate, orders, setPonote]",{"range":"652","text":"653"},"Update the dependencies array to be: [chosen, delivDate, orders, setCalendarEvents, standing]",{"range":"654","text":"655"},"Update the dependencies array to be: [customers, setCustLoaded, setHoldLoaded, setOrdersLoaded, setProdLoaded, setStandLoaded]",{"range":"656","text":"657"},"Update the dependencies array to be: [products, setCustLoaded, setHoldLoaded, setOrdersLoaded, setProdLoaded, setStandLoaded]",{"range":"658","text":"659"},"Update the dependencies array to be: [setCustLoaded, setHoldLoaded, setOrdersLoaded, setProdLoaded, setStandLoaded]",{"range":"660","text":"661"},"Update the dependencies array to be: [fetchRoutes, routes, setIsLoading]",{"range":"662","text":"663"},"Update the dependencies array to be: [setIsLoading]",{"range":"664","text":"665"},{"range":"666","text":"661"},"Update the dependencies array to be: [fetchZones, setIsLoading, zones]",{"range":"667","text":"668"},"Update the dependencies array to be: [products]",{"range":"669","text":"670"},{"range":"671","text":"661"},{"range":"672","text":"647"},{"range":"673","text":"663"},[901,903],"[fetchCustomers]",[1226,1228],"[fetchOrders]",[899,901],"[fetchProducts]",[1069,1071],"[fetchStanding]",[1051,1053],"[fetchHolding]",[1566,1603],"[products, orders, chosen, delivDate, currentCartList]",[1741,1793],"[chosen, delivDate, orders, standing, route, ponote, setCurrentCartList]",[1638,1656],"[chosen, setStandArray, setStandList, standing]",[1556,1619],"[custLoaded, holdLoaded, ordersLoaded, prodLoaded, setIsLoading, standLoaded]",[2444,2462],"[constructData, delivDate, route]",[2518,2520],"[setRoute]",[2548,2566],[2632,2634],[1408,1410],"[orders.length, setOrdersLoaded]",[1523,1525],"[customers.length, setCustLoaded]",[1637,1639],"[products.length, setProdLoaded]",[1752,1754],"[setStandLoaded, standing.length]",[3600,3618],"[constructColumns, constructData, delivDate, route]",[2277,2279],"[props.location.search, setCartList, setChosen]",[3649,3668],"[chosen, customerGroup, delivDate, orders, setRoute]",[3975,3994],"[chosen, delivDate, orders, setPonote]",[1731,1750],"[chosen, delivDate, orders, setCalendarEvents, standing]",[1870,1872],"[customers, setCustLoaded, setHoldLoaded, setOrdersLoaded, setProdLoaded, setStandLoaded]",[1909,1911],"[products, setCustLoaded, setHoldLoaded, setOrdersLoaded, setProdLoaded, setStandLoaded]",[1693,1695],"[setCustLoaded, setHoldLoaded, setOrdersLoaded, setProdLoaded, setStandLoaded]",[903,911],"[fetchRoutes, routes, setIsLoading]",[1895,1897],"[setIsLoading]",[1693,1695],[896,903],"[fetchZones, setIsLoading, zones]",[1131,1133],"[products]",[1637,1639],[2796,2814],[1035,1043]]