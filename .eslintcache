[{"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reportWebVitals.js":"1","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\App.js":"2","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\index.js":"3","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderList.js":"4","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderInfo.js":"5","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\calendarApp.js":"6","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\orderEntryButtons.js":"7","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\orderCommandLine.js":"8","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\recentOrderList.js":"9","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CustomerContext.js":"10","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\dateTimeHelpers.js":"11","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderInfo\\Customers.js":"12","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\OrdersContext.js":"13","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ProductsContext.js":"14","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\StandingContext.js":"15","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderInfo\\DeliveryDate.js":"16","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderList\\CartOrder\\CartEntryItem.js":"17","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderList\\CartOrder\\AddCartEntryItem.js":"18","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderInfo\\PONotes.js":"19","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderInfo\\Routes.js":"20","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\recentOrderList\\RecentOrderListButtons.js":"21","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\recentOrderList\\RecentOrderList.js":"22","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\sortDataHelpers.js":"23","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\useFetch.js":"24","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CurrentDataContext.js":"25","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\handleInteractions.js":"26"},{"size":362,"mtime":1609089131749,"results":"27","hashOfConfig":"28"},{"size":1875,"mtime":1612193227449,"results":"29","hashOfConfig":"28"},{"size":500,"mtime":1609089131749,"results":"30","hashOfConfig":"28"},{"size":460,"mtime":1611853219296,"results":"31","hashOfConfig":"28"},{"size":796,"mtime":1612194391883,"results":"32","hashOfConfig":"28"},{"size":4377,"mtime":1612374157342,"results":"33","hashOfConfig":"28"},{"size":5434,"mtime":1612471278678,"results":"34","hashOfConfig":"28"},{"size":3767,"mtime":1612360008692,"results":"35","hashOfConfig":"28"},{"size":458,"mtime":1612012712350,"results":"36","hashOfConfig":"28"},{"size":1200,"mtime":1612198411288,"results":"37","hashOfConfig":"28"},{"size":663,"mtime":1612466802773,"results":"38","hashOfConfig":"28"},{"size":1616,"mtime":1612303971563,"results":"39","hashOfConfig":"28"},{"size":1512,"mtime":1612409721718,"results":"40","hashOfConfig":"28"},{"size":1180,"mtime":1612190508148,"results":"41","hashOfConfig":"28"},{"size":1123,"mtime":1612190529651,"results":"42","hashOfConfig":"28"},{"size":456,"mtime":1612194275994,"results":"43","hashOfConfig":"28"},{"size":7989,"mtime":1612473197283,"results":"44","hashOfConfig":"28"},{"size":2259,"mtime":1612471112255,"results":"45","hashOfConfig":"28"},{"size":4313,"mtime":1612471161275,"results":"46","hashOfConfig":"28"},{"size":4629,"mtime":1612471140653,"results":"47","hashOfConfig":"28"},{"size":292,"mtime":1612017142492,"results":"48","hashOfConfig":"28"},{"size":1700,"mtime":1612448445563,"results":"49","hashOfConfig":"28"},{"size":4873,"mtime":1612461058917,"results":"50","hashOfConfig":"28"},{"size":629,"mtime":1612189837747,"results":"51","hashOfConfig":"28"},{"size":1088,"mtime":1612224489302,"results":"52","hashOfConfig":"28"},{"size":794,"mtime":1612385307377,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1dwemmr",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reportWebVitals.js",[],["110","111"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\App.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\index.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderInfo.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\calendarApp.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\orderEntryButtons.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\orderCommandLine.js",["112","113","114","115","116","117"],"import React, { useContext } from 'react';\r\nimport { CurrentDataContext } from '../dataContexts/CurrentDataContext';\r\nimport { OrdersContext } from '../dataContexts/OrdersContext';\r\nimport { CustomerContext } from '../dataContexts/CustomerContext';\r\n\r\nimport swal from '@sweetalert/with-react';\r\n\r\n\r\nconst OrderCommandLine = () => {\r\n\r\n  const { chosen, setChosen, delivDate, setDelivDate, setorderTypeWhole } = useContext(CurrentDataContext)\r\n  const { orders, setOrders } = useContext(OrdersContext)\r\n  const { customers } = useContext(CustomerContext)\r\n  \r\n  const checkForCustomer = (entry, customers) => {\r\n\r\n    let nextCustomer = chosen\r\n\r\n    if (entry.includes(\"retail \")){\r\n      setorderTypeWhole(false)\r\n      let newRetailCustName = entry.replace(\"retail \",\"\")\r\n      let newRetailCustList = [...orders]\r\n      let newRetailCustEntry = [\"\",\"\",newRetailCustName,\"\",\"\",\"\",false,\"\"]\r\n      newRetailCustList.push(newRetailCustEntry)\r\n      setOrders(newRetailCustList)\r\n      setChosen(newRetailCustName);\r\n      return\r\n    } \r\n\r\n    for (let cust of customers) {\r\n      if (entry.includes(cust[2]) || entry.includes(cust[0])) {\r\n        nextCustomer = cust[2];\r\n        if (nextCustomer !== ''){\r\n          setChosen(nextCustomer)\r\n          setorderTypeWhole(true)\r\n          return\r\n        }\r\n      };\r\n    };\r\n\r\n\r\n    if (nextCustomer === '' && chosen === ''){\r\n      swal ({\r\n        text: \"Need to choose a customer\",\r\n        icon: \"error\",\r\n        buttons: false,\r\n        timer: 2000\r\n      })\r\n      return\r\n    }\r\n\r\n    swal ({\r\n      text: \"Say What??\",\r\n      icon: \"error\",\r\n      buttons: false,\r\n      timer: 2000\r\n    })\r\n  return\r\n  };\r\n  \r\n  \r\n\r\n  const checkForDelivDate = (entry) => {\r\n    //  check for Sun - Sat\r\n    //  check for today, tomorrow, 2day\r\n    //  check for date format mm/dd/yyyy\r\n    return ''\r\n  };\r\n\r\n\r\n  const checkForRoute = (entry) => {\r\n    // construct a list based on entry find for chosen and deliv date\r\n    // if no list\r\n    //    retrieve default route from customer profile\r\n    // else\r\n    //    retrieve route from list\r\n    return ''\r\n  };\r\n\r\n\r\n  const checkForPonotes = (entry) => {\r\n    // construct a list based on entry find for chosen and deliv date\r\n    // if no list\r\n    //    ponote = ''\r\n    // else\r\n    //    retrieve ponote from list\r\n    return ''\r\n  };\r\n \r\n  \r\n  \r\n  const checkForProducts = (entry, newRoute, newPonote) => {\r\n    \r\n    /*}\r\n    let isThereAProduct = /\\d+\\s\\w+/g.test(entry)\r\n   \r\n    if (isThereAProduct){\r\n      const array = [...entry.matchAll(/\\d+\\s\\w+/g)];\r\n      let enteredProducts = array.map(item => item[0].split(\" \"))\r\n      let ordersToUpdate = [];\r\n      for (let prod of products){\r\n        for (let item of enteredProducts){\r\n          if (prod[2] === item[1]){\r\n            let newOrder = [item[0],prod[1], chosen, newPonote, newRoute, item[0], orderTypeWhole] // [ qty, prod, cust, po, route, so, ty ]\r\n            ordersToUpdate.push(newOrder)\r\n          }\r\n  \r\n        }\r\n      }\r\n    */\r\n    return []\r\n  }\r\n  \r\n  \r\n  const interpretEntry = async (entry) => {\r\n    checkForCustomer(entry, customers)\r\n    \r\n    \r\n  };\r\n\r\n  \r\n\r\n  const handleInput = (entry) => {\r\n     if (entry.key === \"Enter\") {\r\n        interpretEntry(entry.target.value)\r\n        document.getElementById(\"orderCommand\").value = ''; \r\n        \r\n    }\r\n    return\r\n  };\r\n\r\n  \r\n\r\n  \r\n  \r\n  return (        \r\n    <div className = \"orderCommandLine\">\r\n      <input  type=\"text\" \r\n              id=\"orderCommand\" \r\n              className=\"orderCommand\"\r\n              name=\"orderCommand\" \r\n              placeholder=\"Enter Customers, Orders, Dates ...\"\r\n              onKeyUp={e => handleInput(e)}>\r\n\r\n      </input>\r\n    </div>     \r\n  );\r\n}\r\n\r\nexport default OrderCommandLine;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\recentOrderList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CustomerContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\dateTimeHelpers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderInfo\\Customers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\OrdersContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ProductsContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\StandingContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderInfo\\DeliveryDate.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderList\\CartOrder\\CartEntryItem.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderList\\CartOrder\\AddCartEntryItem.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderInfo\\PONotes.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\currentOrderInfo\\Routes.js",["118","119"],"import React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport swal from '@sweetalert/with-react';\r\n\r\nimport { CurrentDataContext } from '../../dataContexts/CurrentDataContext';\r\nimport { CustomerContext } from '../../dataContexts/CustomerContext';\r\nimport { OrdersContext } from '../../dataContexts/OrdersContext';\r\nimport { StandingContext } from '../../dataContexts/StandingContext';\r\n\r\nimport { createRouteList, FindNewRoute } from '../../helpers/sortDataHelpers'\r\nimport { convertDatetoBPBDate, convertDatetoStandingDate } from '../../helpers/dateTimeHelpers'\r\n\r\nconst clonedeep = require('lodash.clonedeep')\r\n\r\nconst Routes = () => {\r\n\r\n    const { customers } = useContext(CustomerContext)\r\n    const { orders, setOrders } = useContext(OrdersContext)\r\n    const { standing } = useContext(StandingContext)\r\n    const { chosen, delivDate, route, setRoute, orderTypeWhole, ponote } = useContext(CurrentDataContext)\r\n\r\n    const [ routes, setRoutes ] = useState()\r\n    \r\n    \r\n    useEffect(()=> {\r\n        let routeList = createRouteList(customers)\r\n        setRoutes(routeList)\r\n    },[customers, setRoutes])\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        let newRoute = FindNewRoute(chosen, delivDate, orders, customers)\r\n        setRoute(newRoute)      \r\n    },[chosen, delivDate, customers, setRoute, orders])\r\n    \r\n\r\n\r\n    const handleChange = e => {\r\n\r\n        let newRoute = e.target.value\r\n         // BUILD PRESENT LIST\r\n        // Build Orders List based on delivDate and Chosen\r\n        let BPBDate = convertDatetoBPBDate(delivDate)\r\n        let filteredOrders = clonedeep(orders)\r\n        let cartList = filteredOrders ? filteredOrders.filter(order => order[7] === BPBDate && order[2] === chosen) : [];\r\n        \r\n        // Build Standing List based on delivDate and Chosen\r\n        let standingDate = convertDatetoStandingDate(delivDate);  \r\n        let filteredStanding = clonedeep(standing)\r\n        let standingList = filteredStanding ? filteredStanding.filter(standing => standing[0] === standingDate && standing[8] === chosen) : [];\r\n        let convertedOrderList = standingList.map(order => [    order[2],\r\n                                                                order[7],\r\n                                                                order[8],\r\n                                                                'na',\r\n                                                                order[6],\r\n                                                                order[2], \r\n                                                                order[3] !== \"9999\" ? true : false,\r\n                                                                standingDate])\r\n        \r\n        // Compare Order List to Stand List and give Order List precedence in final list                                                        \r\n        let orderList = cartList.concat(convertedOrderList)\r\n        for (let i=0; i<orderList.length; ++i ){\r\n            for (let j=i+1; j<orderList.length; ++j){\r\n                if (orderList[i][1] === orderList[j][1]){\r\n                    orderList.splice(j,1);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // set route if route has changed\r\n        if (orderList.length>0) {\r\n            orderList.map(item => item[4] = newRoute)\r\n        } else {\r\n            swal ({\r\n                text: \"Need to enter a product first\",\r\n                icon: \"warning\",\r\n                buttons: false,\r\n                timer: 2000\r\n              })\r\n            return\r\n        }\r\n\r\n        let recent = clonedeep(orders)\r\n        let newOrderList = orderList.concat(recent)\r\n            for (let i=0; i<newOrderList.length; ++i ){\r\n                for (let j=i+1; j<newOrderList.length; ++j){\r\n                    if (  newOrderList[i][1] === newOrderList[j][1] &&\r\n                          newOrderList[i][2] === newOrderList[j][2] &&\r\n                          newOrderList[i][7] === newOrderList[j][7]){\r\n                        newOrderList.splice(j,1);\r\n                    }\r\n                }\r\n              }\r\n          \r\n        if (newOrderList){\r\n          setOrders(newOrderList)\r\n\r\n        setRoute(newRoute);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <label>Routes:</label>\r\n            <select id=\"routes\" name=\"routes\" value={route} onChange={handleChange} disabled={chosen ? false : true}>\r\n            {routes ? routes.map(ro =>  <option id=\"routes\" key={uuidv4()} name={ro}>{ro}</option>) : ''}\r\n            </select>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Routes","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\recentOrderList\\RecentOrderListButtons.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\components\\recentOrderList\\RecentOrderList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\sortDataHelpers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\useFetch.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CurrentDataContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\handleInteractions.js",[],["120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":11,"column":30,"nodeType":"128","messageId":"129","endLine":11,"endColumn":39},{"ruleId":"126","severity":1,"message":"130","line":11,"column":41,"nodeType":"128","messageId":"129","endLine":11,"endColumn":53},{"ruleId":"126","severity":1,"message":"131","line":63,"column":9,"nodeType":"128","messageId":"129","endLine":63,"endColumn":26},{"ruleId":"126","severity":1,"message":"132","line":71,"column":9,"nodeType":"128","messageId":"129","endLine":71,"endColumn":22},{"ruleId":"126","severity":1,"message":"133","line":81,"column":9,"nodeType":"128","messageId":"129","endLine":81,"endColumn":24},{"ruleId":"126","severity":1,"message":"134","line":92,"column":9,"nodeType":"128","messageId":"129","endLine":92,"endColumn":25},{"ruleId":"126","severity":1,"message":"135","line":21,"column":49,"nodeType":"128","messageId":"129","endLine":21,"endColumn":63},{"ruleId":"126","severity":1,"message":"136","line":21,"column":65,"nodeType":"128","messageId":"129","endLine":21,"endColumn":71},{"ruleId":"122","replacedBy":"137"},{"ruleId":"124","replacedBy":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'delivDate' is assigned a value but never used.","Identifier","unusedVar","'setDelivDate' is assigned a value but never used.","'checkForDelivDate' is assigned a value but never used.","'checkForRoute' is assigned a value but never used.","'checkForPonotes' is assigned a value but never used.","'checkForProducts' is assigned a value but never used.","'orderTypeWhole' is assigned a value but never used.","'ponote' is assigned a value but never used.",["139"],["140"],"no-global-assign","no-unsafe-negation"]