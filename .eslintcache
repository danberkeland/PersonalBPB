[{"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reportWebVitals.js":"1","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\App.js":"2","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\index.js":"3","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CustomerContext.js":"4","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\dateTimeHelpers.js":"5","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\OrdersContext.js":"6","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ProductsContext.js":"7","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\StandingContext.js":"8","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\sortDataHelpers.js":"9","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\useFetch.js":"10","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CurrentDataContext.js":"11","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\HoldingContext.js":"12","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\AppRoutes.js":"13","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Ordering.js":"14","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Logistics.js":"15","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ToggleContext.js":"16","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\CartBuildingHelpers.js":"17","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\RoutesContext.js":"18","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\f_orderEntryButtons.js":"19","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\a_OrderingFunctions.js":"20","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo.js":"21","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\c_orderCommandLine.js":"22","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_currentOrderList.js":"23","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList.js":"24","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList\\RecentOrderListButtons.js":"25","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList\\RecentOrderList.js":"26","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\AddCartEntryItem.js":"27","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\AddStandingOrderEntry.js":"28","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\CartEntryItem.js":"29","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\BuildCurrentCartList.js":"30","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\StandingOrderEntry.js":"31","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\BuildCurrentStandingList.js":"32","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\StandBuildingHelpers.js":"33","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\calendarBuildHelper.js":"34","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\calendar.js":"35","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\Customers.js":"36","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\customers.js":"37","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\poNotes.js":"38","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\deliveryDate.js":"39","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\routes.js":"40"},{"size":362,"mtime":1609089131749,"results":"41","hashOfConfig":"42"},{"size":1502,"mtime":1612978384029,"results":"43","hashOfConfig":"42"},{"size":500,"mtime":1609089131749,"results":"44","hashOfConfig":"42"},{"size":1200,"mtime":1612972329564,"results":"45","hashOfConfig":"42"},{"size":2420,"mtime":1613135772666,"results":"46","hashOfConfig":"42"},{"size":1295,"mtime":1612972396003,"results":"47","hashOfConfig":"42"},{"size":1180,"mtime":1612533457287,"results":"48","hashOfConfig":"42"},{"size":1211,"mtime":1612875412932,"results":"49","hashOfConfig":"42"},{"size":3270,"mtime":1613136368443,"results":"50","hashOfConfig":"42"},{"size":629,"mtime":1612533457294,"results":"51","hashOfConfig":"42"},{"size":1039,"mtime":1613153032099,"results":"52","hashOfConfig":"42"},{"size":1190,"mtime":1612875376159,"results":"53","hashOfConfig":"42"},{"size":415,"mtime":1612908319684,"results":"54","hashOfConfig":"42"},{"size":1055,"mtime":1613153967214,"results":"55","hashOfConfig":"42"},{"size":720,"mtime":1613154781808,"results":"56","hashOfConfig":"42"},{"size":1191,"mtime":1612984837944,"results":"57","hashOfConfig":"42"},{"size":4232,"mtime":1613148839875,"results":"58","hashOfConfig":"42"},{"size":430,"mtime":1612978454437,"results":"59","hashOfConfig":"42"},{"size":8006,"mtime":1612982372106,"results":"60","hashOfConfig":"42"},{"size":3874,"mtime":1613153368182,"results":"61","hashOfConfig":"42"},{"size":1121,"mtime":1613154622798,"results":"62","hashOfConfig":"42"},{"size":7420,"mtime":1613152199961,"results":"63","hashOfConfig":"42"},{"size":1070,"mtime":1612984261846,"results":"64","hashOfConfig":"42"},{"size":494,"mtime":1612982365981,"results":"65","hashOfConfig":"42"},{"size":2184,"mtime":1613143462850,"results":"66","hashOfConfig":"42"},{"size":5048,"mtime":1612983227315,"results":"67","hashOfConfig":"42"},{"size":2396,"mtime":1612983582391,"results":"68","hashOfConfig":"42"},{"size":3722,"mtime":1613152095151,"results":"69","hashOfConfig":"42"},{"size":441,"mtime":1612983980749,"results":"70","hashOfConfig":"42"},{"size":3212,"mtime":1613148954759,"results":"71","hashOfConfig":"42"},{"size":582,"mtime":1613138572193,"results":"72","hashOfConfig":"42"},{"size":4949,"mtime":1613148096743,"results":"73","hashOfConfig":"42"},{"size":4042,"mtime":1613148496100,"results":"74","hashOfConfig":"42"},{"size":1822,"mtime":1613152849700,"results":"75","hashOfConfig":"42"},{"size":1328,"mtime":1613153776627,"results":"76","hashOfConfig":"42"},{"size":1697,"mtime":1613154238674,"results":"77","hashOfConfig":"42"},{"size":1679,"mtime":1613154337386,"results":"78","hashOfConfig":"42"},{"size":1683,"mtime":1613154519385,"results":"79","hashOfConfig":"42"},{"size":564,"mtime":1613154473894,"results":"80","hashOfConfig":"42"},{"size":1758,"mtime":1613154589240,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1dwemmr",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reportWebVitals.js",[],["168","169"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\App.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\index.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CustomerContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\dateTimeHelpers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\OrdersContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ProductsContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\StandingContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\sortDataHelpers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\useFetch.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\CurrentDataContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\HoldingContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\AppRoutes.js",["170"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\n\r\nimport Ordering from './Ordering'\r\nimport Logistics from './Logistics'\r\n\r\n\r\n\r\nfunction AppRoutes() {\r\n\r\n  return (\r\n    <Router>\r\n      <Route path=\"/ordering\" component={Ordering} /> \r\n      <Route path=\"/logistics\" component={Logistics} />  \r\n    </Router>        \r\n  );\r\n}\r\n\r\nexport default AppRoutes;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Ordering.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\Logistics.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\ToggleContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\CartBuildingHelpers.js",["171"],"\r\nimport { convertDatetoBPBDate, convertDatetoStandingDate } from '../helpers/dateTimeHelpers'\r\nimport { sortAtoZDataByIndex } from '../helpers/sortDataHelpers'\r\n\r\nimport swal from '@sweetalert/with-react';\r\n\r\nconst clonedeep = require('lodash.clonedeep')\r\n\r\n\r\nexport const buildCartList = (chosen,delivDate,orders) => {\r\n    let BPBDate = convertDatetoBPBDate(delivDate)\r\n    let filteredOrders = clonedeep(orders)\r\n    let builtCartList = []\r\n    if (filteredOrders.length>=0){\r\n        builtCartList = filteredOrders.filter(order => order[7] === BPBDate && order[2] === chosen)\r\n    }\r\n    return builtCartList \r\n}\r\n\r\n\r\nexport const buildStandList = (chosen,delivDate,standing) => {\r\n    let standingDate = convertDatetoStandingDate(delivDate);  \r\n    let filteredStanding = clonedeep(standing)\r\n    let builtStandList =[]\r\n    if (filteredStanding.length>=0){\r\n        builtStandList = filteredStanding.filter(standing => standing[0] === standingDate && standing[8] === chosen)\r\n    }\r\n    let convertedStandList = convertStandListtoStandArray(builtStandList, delivDate)\r\n   \r\n    return convertedStandList\r\n}\r\n\r\n\r\nconst convertStandListtoStandArray = (builtStandList, delivDate) => {\r\n    let convertedStandList = builtStandList.map(order => [    \r\n        order[2],\r\n        order[7],\r\n        order[8],\r\n        'na',\r\n        order[6],\r\n        order[2], \r\n        order[3] !== \"9999\" ? true : false,\r\n        convertDatetoBPBDate(delivDate)])\r\n    return convertedStandList\r\n}\r\n\r\n\r\nexport const compileOrderList = (cartList,standList) => {\r\n    let orderList = cartList.concat(standList)\r\n\r\n    // Remove old cart order from orders if it exists\r\n    for (let i=0; i<orderList.length; ++i ){\r\n        for (let j=i+1; j<orderList.length; ++j){\r\n            if (orderList[i][1] === orderList[j][1]){\r\n                orderList.splice(j,1);\r\n            }\r\n        }\r\n    }\r\n    sortAtoZDataByIndex(orderList,1)\r\n    return orderList\r\n}\r\n\r\n\r\nexport const buildCurrentOrder = (chosen,delivDate,orders,standing) => {\r\n    let cartList = buildCartList(chosen,delivDate,orders)\r\n    let standList = buildStandList(chosen, delivDate, standing)\r\n    let currentOrderList = compileOrderList(cartList,standList)\r\n    return currentOrderList\r\n}\r\n\r\n\r\nexport const filterOutZeros = (currentOrderList) => {\r\n    console.log(currentOrderList)\r\n    let filteredZeros = currentOrderList.filter(order => (Number(order[5])+Number(order[0])>0))\r\n    return filteredZeros\r\n}\r\n\r\n\r\nexport const addNewInfoToOrders = (currentOrderList, orders) => {\r\n    let recent = clonedeep(orders)\r\n        let newOrderList = currentOrderList.concat(recent)\r\n            for (let i=0; i<newOrderList.length; ++i ){\r\n                for (let j=i+1; j<newOrderList.length; ++j){\r\n                    if (  newOrderList[i][1] === newOrderList[j][1] &&\r\n                          newOrderList[i][2] === newOrderList[j][2] &&\r\n                          newOrderList[i][7] === newOrderList[j][7]){\r\n                        newOrderList.splice(j,1);\r\n                    }\r\n                }\r\n              }\r\n    return newOrderList  \r\n}\r\n\r\n\r\nexport const setCurrentCartLineToQty = (e,currentCartList,qty) => {\r\n    let newQty = qty\r\n    let indexToFind = e.target.name\r\n    let foundPresentedIndex = currentCartList.findIndex(line => line[1] === indexToFind)\r\n    let presentedListToModify = [...currentCartList]\r\n    presentedListToModify[foundPresentedIndex][0] = newQty\r\n    return presentedListToModify\r\n}\r\n\r\n\r\nexport const updateCurrentLineInOrdersWithQty = (e,chosen, delivDate, orders, ponote, route, isWhole, qty) => {\r\n    let newQty = qty\r\n    let indexToFind = e.target.name\r\n    let oldValue = e.target.dataset.qty\r\n    let updatedOrders = clonedeep(orders)\r\n    let foundOrdersIndex = updatedOrders.findIndex(line => line[1] === indexToFind &&\r\n        line[2] === chosen && line[7] === convertDatetoBPBDate(delivDate))\r\n    if(foundOrdersIndex>=0){\r\n        updatedOrders[foundOrdersIndex][0] = newQty\r\n    } else {\r\n        let orderToAdd = [newQty,indexToFind,chosen, ponote, route, oldValue, isWhole, convertDatetoBPBDate(delivDate)]\r\n        console.log(orderToAdd)\r\n        updatedOrders.push(orderToAdd)\r\n    }\r\n    return updatedOrders\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\dataContexts\\RoutesContext.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\f_orderEntryButtons.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\a_OrderingFunctions.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\d_currentOrderInfo.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\c_orderCommandLine.js",["172","173","174"],"import React, { useContext } from 'react';\r\n\r\nimport { CurrentDataContext } from '../../dataContexts/CurrentDataContext';\r\nimport { OrdersContext } from '../../dataContexts/OrdersContext';\r\nimport { CustomerContext } from '../../dataContexts/CustomerContext';\r\nimport { StandingContext } from '../../dataContexts/StandingContext';\r\nimport { ProductsContext } from '../../dataContexts/ProductsContext';\r\nimport { ToggleContext } from '../../dataContexts/ToggleContext';\r\n\r\nimport { todayPlus, daysOfTheWeek, convertDatetoBPBDate, convertDatetoStandingDate } from '../../helpers/dateTimeHelpers'\r\n\r\nimport swal from '@sweetalert/with-react';\r\n\r\n\r\nconst clonedeep = require('lodash.clonedeep')\r\n\r\n\r\nconst OrderCommandLine = () => {\r\n\r\n  const { chosen, setChosen, delivDate, setDelivDate, route, ponote } = useContext(CurrentDataContext)\r\n  const { orders, setOrders } = useContext(OrdersContext)\r\n  const { customers } = useContext(CustomerContext)\r\n  const { standing } = useContext(StandingContext)\r\n  const { products } = useContext(ProductsContext)\r\n  const { orderTypeWhole, setOrderTypeWhole, setRouteIsOn } = useContext(ToggleContext)\r\n  \r\n  let [ today, tomorrow, twoDay ] = todayPlus()\r\n\r\n  const checkForCustomer = (entry, customers) => {\r\n\r\n    let nextCustomer = chosen\r\n\r\n    if (entry.includes(\"retail \")){\r\n      setOrderTypeWhole(false)\r\n      let newRetailCustName = entry.replace(\"retail \",\"\")\r\n      let newRetailCustList = [...orders]\r\n      let newRetailCustEntry = [\"\",\"\",newRetailCustName,\"\",\"\",\"\",false,\"\"]\r\n      newRetailCustList.push(newRetailCustEntry)\r\n      setOrders(newRetailCustList)\r\n      setDelivDate(tomorrow)\r\n      setChosen(newRetailCustName);\r\n      return\r\n    } \r\n\r\n    for (let cust of customers) {\r\n      if (entry.includes(cust[2]) || entry.includes(cust[0])) {\r\n        nextCustomer = cust[2];\r\n        if (nextCustomer !== ''){\r\n          setChosen(nextCustomer)\r\n          setRouteIsOn(true)\r\n          setDelivDate(tomorrow)\r\n          setOrderTypeWhole(true)\r\n          return\r\n        }\r\n      };\r\n    };\r\n\r\n\r\n    if (nextCustomer === '' && chosen === ''){\r\n      swal ({\r\n        text: \"Please choose a customer\",\r\n        icon: \"error\",\r\n        buttons: false,\r\n        timer: 2000\r\n      })\r\n      return\r\n    }\r\n\r\n    \r\n    return false\r\n  };\r\n  \r\n  \r\n\r\n  const checkForDelivDate = (entry) => {\r\n    let [ today, tomorrow, twoDay ] = todayPlus()\r\n    let [ Sun, Mon, Tues, Wed, Thurs, Fri, Sat ] = daysOfTheWeek()\r\n    let dateWords = [ ['today',today],['tomorrow',tomorrow],['twoday',twoDay],\r\n                      ['sun',Sun],['mon',Mon],['tue',Tues],['tues',Tues],['wed',Wed],['thu',Thurs],\r\n                      ['thur',Thurs],['thurs',Thurs],['fri',Fri],['sat',Sat]]\r\n    for (let wordSet of dateWords){\r\n      if(entry.includes(wordSet[0])){\r\n        setDelivDate(wordSet[1])\r\n      }\r\n      \r\n    }\r\n  };\r\n\r\n  \r\n  \r\n  const checkForProducts = (entry) => {\r\n    \r\n    \r\n    let isThereAProduct = /\\d+\\s\\w+/g.test(entry)\r\n    if (isThereAProduct){\r\n      let newOrder\r\n      const array = [...entry.matchAll(/\\d+\\s\\w+/g)];\r\n      let enteredProducts = array.map(item => item[0].split(\" \"))\r\n      let ordersToUpdate = [];\r\n      for (let prod of products){\r\n        for (let item of enteredProducts){\r\n          if (prod[2] === item[1]){\r\n            newOrder = [item[0],prod[1], chosen, ponote, route, \"0\", orderTypeWhole, convertDatetoBPBDate(delivDate)] // [ qty, prod, cust, po, route, so, ty ]\r\n            ordersToUpdate.push(newOrder)\r\n          }\r\n  \r\n        }\r\n      }\r\n    \r\n      console.log(ordersToUpdate)\r\n\r\n      // create map of orders for cust, delivdate #1\r\n\r\n      // Build Orders List based on delivDate and Chosen\r\n      let BPBDate = convertDatetoBPBDate(delivDate)\r\n      let filteredOrders = clonedeep(orders)\r\n      let cartList = filteredOrders ? filteredOrders.filter(order => order[7] === BPBDate && order[2] === chosen) : [];\r\n      \r\n      // Build Standing LIst based on delivDate and Chosen\r\n      let standingDate = convertDatetoStandingDate(delivDate);  \r\n      let filteredStanding = clonedeep(standing)\r\n      let standingList = filteredStanding ? filteredStanding.filter(standing => standing[0] === standingDate && standing[8] === chosen) : [];\r\n      let convertedOrderList = standingList.map(order => [    order[2],\r\n                                                              order[7],\r\n                                                              order[8],\r\n                                                              'na',\r\n                                                              order[6],\r\n                                                              order[2], \r\n                                                              order[3] !== \"9999\" ? true : false,\r\n                                                              convertDatetoBPBDate(delivDate)])\r\n      \r\n      // Compare Order List to Stand List and give Order List precedence in final list                                                        \r\n      let custOrderList = cartList.concat(convertedOrderList)\r\n      for (let i=0; i<custOrderList.length; ++i ){\r\n          for (let j=i+1; j<custOrderList.length; ++j){\r\n              if (custOrderList[i][1] === custOrderList[j][1]){\r\n                  custOrderList.splice(j,1);\r\n              }\r\n          }\r\n      }\r\n\r\n      console.log(custOrderList)\r\n      // new product by new product, check if it exists\r\n      let ordersToModify = [...orders]\r\n      if (custOrderList.length>0){\r\n        for (let ord of ordersToUpdate){\r\n          for (let custOrd of custOrderList){\r\n            if (ord[1] === custOrd[1]){\r\n            \r\n              let index = ordersToModify.findIndex(order => order[1] === custOrd[1] &&\r\n                    order[2] === chosen && order[7] === convertDatetoBPBDate(delivDate));\r\n              if (index>=0){\r\n                ordersToModify[index][0] = ord[0] \r\n                     \r\n              } else{\r\n                ord[5] = custOrd[5]\r\n                ordersToModify.push(ord)\r\n                \r\n              }\r\n            }\r\n          }    \r\n        }\r\n      }\r\n      for (let ord of ordersToUpdate){\r\n        for (let mod in ordersToModify){\r\n          let index = ordersToModify.findIndex(order => order[1] === ord[1] &&\r\n            order[2] === chosen && order[7] === convertDatetoBPBDate(delivDate));\r\n          if (index<0){\r\n            ordersToModify.push(ord)\r\n          }\r\n        }\r\n      }\r\n      // for order in ordersToModify\r\n      //      if index not in orders - push order into ordersToModify\r\n      setOrders(ordersToModify)\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  const interpretEntry = async (entry) => {\r\n    checkForCustomer(entry, customers)\r\n    checkForDelivDate(entry)\r\n    checkForProducts(entry)\r\n  };\r\n\r\n  \r\n\r\n  const handleInput = (entry) => {\r\n     if (entry.key === \"Enter\") {\r\n        interpretEntry(entry.target.value)\r\n        document.getElementById(\"orderCommand\").value = ''; \r\n        \r\n    }\r\n    return\r\n  };\r\n\r\n  \r\n\r\n  \r\n  \r\n  return (        \r\n    <div className = \"orderCommandLine\">\r\n      <input  type=\"text\" \r\n              id=\"orderCommand\" \r\n              className=\"orderCommand\"\r\n              name=\"orderCommand\" \r\n              placeholder=\"Enter Customers, Orders, Dates ...\"\r\n              onKeyUp={e => handleInput(e)}>\r\n\r\n      </input>\r\n    </div>     \r\n  );\r\n}\r\n\r\nexport default OrderCommandLine;\r\n","C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_currentOrderList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList\\RecentOrderListButtons.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\g_recentOrderList\\RecentOrderList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\AddCartEntryItem.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\AddStandingOrderEntry.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\CartEntryItem.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\CartOrder\\BuildCurrentCartList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\StandingOrderEntry.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\pages\\ordering\\e_CurrentOrderList\\StandingOrder\\BuildCurrentStandingList.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\StandBuildingHelpers.js",["175","176","177","178"],"import { convertDatetoBPBDate, convertDatetoStandingDate } from '../helpers/dateTimeHelpers'\r\nimport { sortAtoZDataByIndex } from '../helpers/sortDataHelpers'\r\n\r\nimport swal from '@sweetalert/with-react';\r\n\r\nconst clonedeep = require('lodash.clonedeep')\r\n\r\n\r\nexport const checkStandHoldStatus = (standing,holding,chosen) => {\r\n\r\n    let Stand = false\r\n    let Hold = false\r\n    let standingToCheck = clonedeep(standing)\r\n    let holdingToCheck = clonedeep(holding)\r\n    // check for standing, if no, check for holding, if no return\r\n    \r\n    for (let stand in standingToCheck){\r\n        if (standingToCheck[stand][8] === chosen){\r\n            Stand = true\r\n        }\r\n    }\r\n    for (let hold in holdingToCheck){\r\n        if (holdingToCheck[hold][8] === chosen){\r\n            Hold = true\r\n        }\r\n    }\r\n    return [Stand,Hold]\r\n}\r\n\r\n\r\nexport const createStandListArray = (standing, holding, Stand, Hold, chosen) => {\r\n    \r\n    let buildStandArray = []\r\n    if (Stand){\r\n        let pullStand = clonedeep(standing)\r\n        for (let pull of pullStand){\r\n            // search index of item in buildArray\r\n            if (pull[8] === chosen){\r\n                let ind = buildStandArray.findIndex(stand => stand[0] === pull[7])\r\n                if (ind>=0){\r\n                    buildStandArray[ind][Number(pull[0])] = pull[2]\r\n                } else {\r\n                    let newStand = [pull[7],\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"]\r\n                    newStand[Number(pull[0])] = pull[2]\r\n                    buildStandArray.push(newStand)\r\n                }\r\n            }\r\n        } \r\n    }   \r\n    if (Hold){\r\n        let pullHold = clonedeep(holding)\r\n        for (let pull of pullHold){\r\n            // search index of item in buildArray\r\n            if (pull[8] === chosen){\r\n                let ind = buildStandArray.findIndex(stand => stand[0] === pull[7])\r\n                if (ind>=0){\r\n                    buildStandArray[ind][Number(pull[0])] = pull[2]\r\n                } else {\r\n                    let newStand = [pull[7],\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"]\r\n                    newStand[Number(pull[0])] = pull[2]\r\n                    buildStandArray.push(newStand)\r\n                }\r\n            }\r\n        } \r\n    }   \r\n    \r\n    return buildStandArray\r\n}\r\n\r\n\r\nexport const clearSelectedStandItem = (e,standArray) => {\r\n    let indexToFind = e.target.name\r\n    let foundStandIndex = standArray.findIndex(line => line[0] === indexToFind)\r\n    let standListToModify = clonedeep(standArray)\r\n    for (let i = 1; i<8; ++i){\r\n        standListToModify[foundStandIndex][i] = \"0\";\r\n    }\r\n    return standListToModify\r\n}\r\n\r\n\r\nexport const createUpdateWeeklyList = (e, updatedStandorHold, chosen) => {\r\n    let indexToFind = e.target.name\r\n    for (let i = 1; i<8; ++i){\r\n        let ind = updatedStandorHold.findIndex(stand => stand[0] === i.toString() && stand[7] === indexToFind && stand[8] === chosen)\r\n        if (ind>=0){\r\n            updatedStandorHold[ind][2] = \"0\";\r\n        }\r\n    }\r\n    updatedStandorHold = updatedStandorHold.filter(stand => stand[2] !==\"0\")\r\n    return updatedStandorHold\r\n}\r\n\r\n\r\nexport const setCurrentStandLineToQty = (e,standArray) => {\r\n    let newQty = e.target.value\r\n    let indexToFind = e.target.name\r\n    let foundStandIndex = standArray.findIndex(line => line[0] === indexToFind)\r\n    let StandListToModify = clonedeep(standArray)\r\n    let intTarg = e.target.id\r\n    intTarg = intTarg.split('_')\r\n    StandListToModify[foundStandIndex][intTarg[1]] = newQty;\r\n    return StandListToModify\r\n}\r\n\r\n\r\nexport const createUpdateWeeklyStandList = (e, updatedStandorHold, chosen) => {\r\n    let newQty = e.target.value\r\n    let indexToFind = e.target.name\r\n    let intTarg = e.target.id\r\n    intTarg = intTarg.split('_')\r\n    let updatedStanding = clonedeep(updatedStandorHold)\r\n    let ind = updatedStanding.findIndex(stand => stand[0] === intTarg[1] \r\n        && stand[7] === indexToFind && stand[8] === chosen)\r\n    if(ind>=0){\r\n        updatedStanding[ind][2] = newQty\r\n    }\r\n    return updatedStanding\r\n}",["179","180"],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\helpers\\calendarBuildHelper.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\calendar.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\Customers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\customers.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\poNotes.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\deliveryDate.js",[],"C:\\Users\\danbe\\Desktop\\AnAppaDay\\Jan20bpbwholeguiReact\\src\\reusableComponents\\routes.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":3,"column":35,"nodeType":"187","messageId":"188","endLine":3,"endColumn":41},{"ruleId":"185","severity":1,"message":"189","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":12},{"ruleId":"185","severity":1,"message":"190","line":27,"column":9,"nodeType":"187","messageId":"188","endLine":27,"endColumn":14},{"ruleId":"185","severity":1,"message":"191","line":27,"column":26,"nodeType":"187","messageId":"188","endLine":27,"endColumn":32},{"ruleId":"185","severity":1,"message":"192","line":165,"column":18,"nodeType":"187","messageId":"188","endLine":165,"endColumn":21},{"ruleId":"185","severity":1,"message":"193","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":30},{"ruleId":"185","severity":1,"message":"194","line":1,"column":32,"nodeType":"187","messageId":"188","endLine":1,"endColumn":57},{"ruleId":"185","severity":1,"message":"195","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":29},{"ruleId":"185","severity":1,"message":"189","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":12},{"ruleId":"181","replacedBy":"196"},{"ruleId":"183","replacedBy":"197"},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'swal' is defined but never used.","'today' is assigned a value but never used.","'twoDay' is assigned a value but never used.","'mod' is assigned a value but never used.","'convertDatetoBPBDate' is defined but never used.","'convertDatetoStandingDate' is defined but never used.","'sortAtoZDataByIndex' is defined but never used.",["198"],["199"],"no-global-assign","no-unsafe-negation"]